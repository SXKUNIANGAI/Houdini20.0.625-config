{"type": "root", "attrs": {"type": "node", "context": "sop", "icon": "SOP/rbdconstraintsfromrules", "internal": "rbdconstraintsfromrules", "tags": "rbd, constraints", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["RBD Constraints From Rules"], "extent": [134, 165]}, {"type": "summary", "indent": 0, "text": ["Creates rigid body constraint geometry from a set of rules and conditions."], "extent": [165, 249]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [249, 265], "body": [{"type": "para", "indent": 0, "text": ["This is a procedural node that allows you to create and edit constraints based on a set of rules and conditions. For example, you can constrain pieces based on groups and then only constrain the pieces that are within a certain bounding region. Once the rules and conditions are set, you can choose the ", {"type": "ui", "text": ["Connection Type"]}, " to determine how the constraints are set up."], "extent": [265, 635]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/sop/RBD_constraint_rules.jpg", "type": "img", "text": ""}], "extent": [635, 681]}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Edit hinge position"], "role": "item", "extent": [681, 709], "body": [{"type": "para", "indent": 4, "text": [{"keys": ["LMB"], "type": "keys", "text": null}, " drag the hinge."], "extent": [709, 742]}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Delete hinge"], "role": "item", "extent": [742, 763], "body": [{"type": "para", "indent": 4, "text": [{"keys": ["Ctrl", "LMB"], "type": "keys", "text": null}, " click the hinge."], "extent": [763, 804]}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Slide hinge position along the constraint line."], "role": "item", "extent": [804, 859], "body": [{"type": "para", "indent": 4, "text": [{"keys": ["MMB"], "type": "keys", "text": null}, " drag along the line."], "extent": [859, 893]}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Switch between edit and transform handle"], "role": "item", "extent": [893, 942], "body": [{"type": "para", "indent": 4, "text": ["Press ", {"keys": ["2"], "type": "keys", "text": null}, "."], "extent": [942, 960]}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Display/hide bounding box handles"], "role": "item", "extent": [960, 1002], "body": [{"type": "para", "indent": 4, "text": ["Press ", {"keys": ["3"], "type": "keys", "text": null}, "."], "extent": [1002, 1020]}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": [" Cycle between handles"], "role": "item", "extent": [1020, 1050], "body": [{"type": "para", "indent": 4, "text": ["Press ", {"keys": ["Z"], "type": "keys", "text": null}, "."], "extent": [1050, 1069]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [1069, 1077], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Geometry"], "extent": [1077, 1088], "body": [{"type": "para", "indent": 4, "text": ["Input geometry to create constraints for."], "extent": [1088, 1135]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Constraint Geometry"], "extent": [1135, 1156], "body": [{"type": "para", "indent": 4, "text": ["Constraint geometry to be merged with. Used with the match name pairs option."], "extent": [1156, 1239]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Proxy Geometry"], "extent": [1239, 1255], "body": [{"type": "para", "indent": 4, "text": ["Proxy geometry. The constraints will be built using this geometry when available."], "extent": [1255, 1342]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Bounding Geometry"], "extent": [1342, 1361], "body": [{"type": "para", "indent": 4, "text": ["Input geometry defining the volume within which to create constraints."], "extent": [1361, 1437]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1437, 1449], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Connection Type"], "extent": [1449, 1467], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Surface Points"], "extent": [1467, 1487], "body": [{"type": "para", "indent": 8, "text": ["Creates constraints connecting closest points from nearby pieces."], "extent": [1487, 1561]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hinges"], "extent": [1561, 1573], "body": [{"type": "para", "indent": 8, "text": ["Creates 0 length 2 point prim constraints placed at the intersection of the 2 surfaces."], "extent": [1573, 1669]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Center of Mass"], "extent": [1669, 1689], "body": [{"type": "para", "indent": 8, "text": ["Creates constraints connecting centroids of nearby pieces."], "extent": [1689, 1756]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hinge Length"], "extent": [1756, 1770], "body": [{"type": "para", "indent": 4, "text": ["Specify the length of the hinge constraint."], "extent": [1770, 1819]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [1819, 1831], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the created constraints should be grouped together.\n    This can be used with the ", {"type": "ui", "text": ["Constraint Group"]}, " parameter on ", {"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": ["RBD Constraint Properties"], "fullpath": "/nodes/sop/rbdconstraintproperties.html"}, " to easily alter specific constraints."], "extent": [1846, 2080]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Name"], "extent": [2080, 2092], "body": [{"type": "para", "indent": 4, "text": ["Adds the created constraints to a primitive group with the specified name."], "extent": [2111, 2191]}], "container": true, "attrs": {"id": "groupname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tag"], "extent": [2191, 2196], "body": [{"type": "para", "indent": 4, "text": ["Assigns the specified name to the ", {"type": "code", "text": ["constraint_tag"]}, " primitive attribute for each of the created constraints."], "extent": [2209, 2322]}], "container": true, "attrs": {"id": "tag"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show Object Link"], "extent": [2322, 2340], "body": [{"type": "para", "indent": 4, "text": ["When the connection type is set to ", {"type": "ui", "text": ["Surface Points"]}, " or ", {"type": "ui", "text": ["Hinges"]}, ", displays links to the pieces' centroids to help identify them."], "extent": [2340, 2477]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clear Hinge Edits"], "extent": [2477, 2496], "body": [{"type": "para", "indent": 4, "text": ["Remove all hinge constraint edits."], "extent": [2496, 2536]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Groups"], "extent": [2536, 2544], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All"], "extent": [2544, 2553], "body": [{"type": "para", "indent": 8, "text": ["Create constraints between all pieces."], "extent": [2553, 2600]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All to Group"], "extent": [2600, 2618], "body": [{"type": "para", "indent": 8, "text": ["Create constraints between pieces in Group 1 and all other pieces."], "extent": [2618, 2693]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Group to Group"], "extent": [2693, 2713], "body": [{"type": "para", "indent": 8, "text": ["Create constraints between pieces in Group 1 and pieces in Group 2."], "extent": [2713, 2790]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Points per Area"], "extent": [2790, 2807], "body": [{"type": "para", "indent": 4, "text": ["When connection type is ", {"type": "ui", "text": ["Center of Mass"]}, ", points are first seeded on \n    the surface of all the objects. There must be enough points for close\n    points to occur to detect close surfaces. This should be scaled down\n    by the square of the geometry size. For example, if your geometry is 10\u00d7 bigger, \n    you should have 1/100 of the points per area."], "extent": [2830, 3190]}], "container": true, "attrs": {"id": "pointsperarea"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attribute"], "extent": [3190, 3207], "body": [{"type": "para", "indent": 4, "text": ["String or Int primitive attribute name indicating piece boundaries - no \n    constraints will be created between pieces with the same attribute value."], "extent": [3231, 3387]}], "container": true, "attrs": {"id": "pieceattribute"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Search Radius"], "extent": [3387, 3402], "body": [{"type": "para", "indent": 4, "text": ["Specify the maximum allowed distance when searching for nearby points."], "extent": [3424, 3500]}], "container": true, "attrs": {"id": "searchradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Search Points"], "extent": [3500, 3519], "body": [{"type": "para", "indent": 4, "text": ["Specifies an upper limit on the number of nearby points that can be \n    inspected. Lower numbers will improve performance but run the risk\n    that only points from the same piece will be detected rather than \n    points on nearby pieces, causing connections to be missed."], "extent": [3544, 3823]}], "container": true, "attrs": {"id": "maxsearchpoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Connections"], "extent": [3823, 3840], "body": [{"type": "para", "indent": 4, "text": ["Specifies an upper limit on the number of pieces that each seed point\n    can be connected to."], "extent": [3864, 3964]}], "container": true, "attrs": {"id": "maxconnections"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraints Per Piece"], "extent": [3964, 3987], "body": [{"type": "para", "indent": 4, "text": ["Specify the maximum number of constraints between 2 pieces."], "extent": [4016, 4081]}], "container": true, "attrs": {"id": "constraintsperpiece"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Clusters"], "extent": [4081, 4095], "body": [{"type": "para", "indent": 4, "text": ["Use a cluster float attribute to connect pieces with matching values within a given tolerance."], "extent": [4095, 4195]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [4195, 4201], "body": [{"type": "para", "indent": 4, "text": ["Controls how the ", {"type": "ui", "text": ["Cluster Attribute"]}, " values and ", {"type": "ui", "text": ["Tolerance"]}, " are used to connect pieces.\n    ", {"type": "ui", "text": ["Remove Difference"]}, " will remove constraints where the cluster values differ by more than the ", {"type": "ui", "text": ["Tolerance"]}, " (connecting only pieces with similar cluster values), and ", {"type": "ui", "text": ["Keep Difference"]}, " will perform the inverse operation."], "extent": [4201, 4525]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cluster Attribute"], "extent": [4525, 4544], "body": [{"type": "para", "indent": 4, "text": ["Specify the name of the float cluster attribute."], "extent": [4544, 4598]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tolerance"], "extent": [4598, 4609], "body": [{"type": "para", "indent": 4, "text": ["Specify the attrib value tolerance. "], "extent": [4609, 4651]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match by Existing Constraints"], "extent": [4651, 4682], "body": [{"type": "para", "indent": 4, "text": ["Constraints will only be created between pieces with name pairs defined by the second inputs \n    constraint geometry. This is mostly useful for converting center of mass constraints \n    to other constraint types."], "extent": [4682, 4902]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [4902, 4909], "body": [{"type": "para", "indent": 4, "text": ["The group of constraint prims to consider when matching by name pairs."], "extent": [4909, 4985]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Constraints"], "extent": [4985, 5003], "body": [{"type": "para", "indent": 4, "text": ["By default the original reference name pair constraint primitives will be replaced by the new constraints. Turning this on will ensure they aren\u2019t deleted."], "extent": [5003, 5164]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep in Bounding Regions"], "extent": [5164, 5190], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Enable"], "extent": [5190, 5202], "body": [{"type": "para", "indent": 8, "text": ["Generate constraints only within the bounding volume."], "extent": [5202, 5269]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bounding Type"], "extent": [5269, 5288], "body": [{"type": "para", "indent": 8, "text": ["Shape of bounding volume."], "extent": [5288, 5323]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inverse"], "extent": [5323, 5336], "body": [{"type": "para", "indent": 8, "text": ["Constraints are generated only outside the bounding volume."], "extent": [5336, 5405]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Size"], "extent": [5405, 5415], "body": [{"type": "para", "indent": 8, "text": ["Size of the bounding box."], "extent": [5415, 5450]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Center"], "extent": [5450, 5462], "body": [{"type": "para", "indent": 8, "text": ["Center of the bounding box."], "extent": [5462, 5499]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rotation"], "extent": [5499, 5513], "body": [{"type": "para", "indent": 8, "text": ["Rotation of the bounding box."], "extent": [5513, 5553]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5553, 5562], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/booleanfracture", "type": "link", "text": "", "fullpath": "/nodes/sop/booleanfracture.html"}], "extent": [5562, 5595]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdcluster", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdcluster.html"}], "extent": [5595, 5623]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdconstraintsfromlines", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdconstraintsfromlines.html"}], "extent": [5623, 5664]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdconstraintsfromcurves", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdconstraintsfromcurves.html"}], "extent": [5664, 5706]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdconstraintproperties.html"}], "extent": [5706, 5747]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdinteriordetail", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdinteriordetail.html"}], "extent": [5747, 5782]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdmaterialfracture", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdmaterialfracture.html"}], "extent": [5782, 5819]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/voronoifracture", "type": "link", "text": "", "fullpath": "/nodes/sop/voronoifracture.html"}], "extent": [5819, 5852]}], "container": true}], "text": "Related"}], "title": ["RBD Constraints From Rules"], "summary": ["Creates rigid body constraint geometry from a set of rules and conditions."]}