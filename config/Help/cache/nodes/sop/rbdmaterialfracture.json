{"type": "root", "attrs": {"type": "node", "context": "sop", "icon": "SOP/rbdmaterialfracture", "internal": "rbdmaterialfracture::3.0", "version": "3.0", "since": "18.0", "tags": "break", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["RBD Material Fracture"], "extent": [135, 161]}, {"type": "summary", "indent": 0, "text": ["Fractures the input geometry based on a material type."], "extent": [161, 225]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [225, 240], "body": [{"type": "para", "indent": 0, "text": ["This node allows you to accurately fracture geometry based on a specific type of material. Currently concrete, glass panels, and wood are supported."], "extent": [240, 391]}, {"type": "para", "indent": 0, "text": ["It accepts four inputs: geometry, constraint geometry, proxy geometry, and an optional input for extra points to control the fracturing process. It will fracture the incoming geometry using different fracturing method depending on the material specified in the ", {"type": "ui", "text": ["Material Type"]}, " parameter. If an input constraint geometry is specified, it will update the constraints for the fractured pieces."], "extent": [391, 785]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "#concrete", "type": "link", "text": ["Concrete"], "fullpath": "/nodes/sop/rbdmaterialfracture.html#concrete", "fragment": "#concrete"}], "extent": [785, 808]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "#glass", "type": "link", "text": ["Glass"], "fullpath": "/nodes/sop/rbdmaterialfracture.html#glass", "fragment": "#glass"}], "extent": [808, 825]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "#wood", "type": "link", "text": ["Wood"], "fullpath": "/nodes/sop/rbdmaterialfracture.html#wood", "fragment": "#wood"}], "extent": [825, 840]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "#custom", "type": "link", "text": ["Custom"], "fullpath": "/nodes/sop/rbdmaterialfracture.html#custom", "fragment": "#custom"}], "extent": [840, 860]}], "container": true}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "/destruction/overview", "type": "link", "text": ["fracturing objects for simulation"], "fullpath": "/destruction/overview.html"}, " for a guide to fracturing workflows and tools in Houdini."], "extent": [860, 982]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Using different displays"], "extent": [982, 1013], "body": [{"type": "para", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Guide Geometry"]}, " parameter on the ", {"scheme": "Node", "value": "/nodes/sop/rbdmaterialfracture", "type": "link", "text": ["RBD Material Fracture"], "fullpath": "/nodes/sop/rbdmaterialfracture.html"}, " node will allow you to switch between different displays. All materials have ", {"type": "ui", "text": ["Fractured Geometry"]}, ", which will display the group being fractured."], "extent": [1013, 1256]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_concrete1.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_glass_none.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_wood_none.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_custom.png", "type": "img", "text": ""}], "extent": [1256, 1491]}, {"type": "para", "indent": 0, "text": ["They also all have ", {"type": "ui", "text": ["Constraint Network"]}, ", which will display the internal constraint network of all fractured pieces."], "extent": [1491, 1611]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_concrete_constraintnetwork.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_glass_constraintnetwork.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_wood_constraintnetwork.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_custom_constraintnetwork.png", "type": "img", "text": ""}], "extent": [1611, 1907]}, {"type": "para", "indent": 0, "text": ["There are two concrete-specific displays: ", {"type": "ui", "text": ["Primary Volume"]}, " and ", {"type": "ui", "text": ["Edge Detail"]}, ". These views allow you to display the volume distribution for each primary fracture level used for scattering and display the boolean cutting planes used to generate the edge detail."], "extent": [1907, 2173]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_concrete_primaryvolume.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_concrete_edgedetail.jpg", "type": "img", "text": ""}], "extent": [2173, 2316]}, {"type": "para", "indent": 0, "text": ["There are also two glass-specific displays: ", {"type": "ui", "text": ["Concentric Noise"]}, " and ", {"type": "ui", "text": ["Edge Detail"]}, ". These views allow you to display the noise used for determining the discontinuity for concentric cracks and display the magnitude distribution of the edge noise."], "extent": [2316, 2565]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_glass_CN.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_glass_EN.jpg", "type": "img", "text": ""}], "extent": [2565, 2685]}, {"type": "para", "indent": 0, "text": ["The three wood-specific displays allow you to display the cutting planes for grains, cuts, and splinters."], "extent": [2685, 2792]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_wood_grains.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_wood_cuts.jpg", "type": "img", "text": ""}, " \n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_wood_splinters.jpg", "type": "img", "text": ""}], "extent": [2792, 2981]}, {"type": "para", "indent": 0, "text": ["There are three custom-specific displays: ", {"type": "ui", "text": ["Primary Volume"]}, ", ", {"type": "ui", "text": ["Cutter Geometry"]}, " and ", {"type": "ui", "text": ["Boolean Guide"]}, ". These views allow you to display the volume distribution for the built-in scattered cutter geometry, display the cutter geometry, and the cutter geometry with the edge detail noise."], "extent": [2981, 3269]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_custom_volume.png", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_custom_cuttergeo.png", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/dynamics/rbdmaterialfracture_custom_edgedetail.png", "type": "img", "text": ""}], "extent": [3269, 3467]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [3467, 3479], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [3479, 3487], "body": [{"type": "para", "indent": 4, "text": ["The geometry to be fractured. If no group is specified, the full input geometry will be fractured."], "extent": [3502, 3606]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Material Type"], "extent": [3606, 3621], "body": [{"type": "para", "indent": 4, "text": ["The type of material of the incoming geometry."], "extent": [3643, 3699]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Concrete"], "extent": [3699, 3713], "body": [{"type": "para", "indent": 8, "text": ["Concrete material type."], "extent": [3713, 3745]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Glass"], "extent": [3745, 3756], "body": [{"type": "para", "indent": 8, "text": ["Glass material type. Choose between ", {"type": "ui", "text": ["Flat Panes"]}, " or ", {"type": "ui", "text": ["Curved Glass"]}, "."], "extent": [3756, 3836]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Wood"], "extent": [3836, 3846], "body": [{"type": "para", "indent": 8, "text": ["Wood material type."], "extent": [3846, 3874]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [3874, 3886], "body": [{"type": "para", "indent": 8, "text": ["Custom cutters."], "extent": [3886, 3911]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "materialtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture Namespace"], "extent": [3911, 3931], "body": [{"type": "para", "indent": 4, "text": ["Adds a namespace prefix to the name of each piece. This is useful for avoiding duplicate piece names or isolating a group of constraints."], "extent": [3931, 4074]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture per Piece"], "extent": [4074, 4094], "body": [{"type": "para", "indent": 4, "text": ["Loops through each piece in the input geometry and fractures them individually.\n    If the ", {"type": "ui", "text": ["Piece Attribute"]}, " is not found, it will fracture based on connectivity."], "extent": [4094, 4264]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attribute"], "extent": [4264, 4281], "body": [{"type": "para", "indent": 4, "text": ["The primitive attribute that defines each piece for partitioning."], "extent": [4281, 4352]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Single Pass"], "extent": [4352, 4365], "body": [{"type": "para", "indent": 4, "text": ["Fractures a specific piece at the given index.\n    This can be useful for debugging and testing using a single piece."], "extent": [4365, 4488]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Random Seed"], "extent": [4488, 4501], "body": [{"type": "para", "indent": 4, "text": ["The seed used when adding random variation of the parameters for each piece."], "extent": [4501, 4583]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Prefix"], "extent": [4583, 4597], "body": [{"type": "para", "indent": 4, "text": ["The prefix applied to the name of each piece created by the fracture. "], "extent": [4597, 4677]}, {"type": "para", "indent": 4, "text": [{"keys": ["-"], "type": "keys", "text": null}, " will create pieces such as ", {"type": "code", "text": ["piece0-0-0"]}, ", ", {"type": "code", "text": ["piece0-0-1"]}, ", etc"], "extent": [4677, 4751]}, {"type": "para", "indent": 4, "text": [{"keys": ["_"], "type": "keys", "text": null}, " will result in ", {"type": "code", "text": ["piece0_0_0"]}, ", ", {"type": "code", "text": ["piece0_0_1"]}, " etc"], "extent": [4751, 4808]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reset Cached Pass"], "extent": [4808, 4827], "body": [{"type": "para", "indent": 4, "text": ["Resets the currently cached display in the for loop.\n    Use this to update the guide geometry if it is not displaying the current geometry."], "extent": [4827, 4974]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": "concrete", "container": true, "type": "h", "indent": 0, "text": ["Concrete"], "extent": [4974, 5000], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Guide Geometry"], "extent": [5000, 5017], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [5044, 5054], "body": [{"type": "para", "indent": 8, "text": ["No guide geometry."], "extent": [5054, 5081]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fractured Geometry"], "extent": [5081, 5105], "body": [{"type": "para", "indent": 8, "text": ["The group that is currently being fractured will be highlighted."], "extent": [5105, 5178]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Primary Volume"], "extent": [5178, 5198], "body": [{"type": "para", "indent": 8, "text": ["Displays the volume distribution for each primary fracture level used for scattering."], "extent": [5198, 5292]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Edge Detail"], "extent": [5292, 5309], "body": [{"type": "para", "indent": 8, "text": ["Displays the cutting planes used to generate the edge detail."], "extent": [5309, 5379]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Constraint Network"], "extent": [5379, 5403], "body": [{"type": "para", "indent": 8, "text": ["Displays the constraint network of all pieces."], "extent": [5403, 5460]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "concrete_guidegeo"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Primary Fracture"], "extent": [5460, 5485], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Fracture"], "extent": [5485, 5503], "body": [{"type": "para", "indent": 4, "text": ["Turning off this checkbox will bypass this fracture level."], "extent": [5503, 5567]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture Level"], "extent": [5567, 5583], "body": [{"type": "para", "indent": 4, "text": ["The number of levels of recursive fracturing to perform."], "extent": [5583, 5645]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture ID"], "extent": [5645, 5658], "body": [{"type": "para", "indent": 4, "text": ["The fracture ID for this fracture level. The output attributes and groups associated with this fracture level will have this tag."], "extent": [5658, 5793]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture Ratio"], "extent": [5793, 5809], "body": [{"type": "para", "indent": 4, "text": ["The ratio of all the pieces from the previous level to fracture at this level."], "extent": [5809, 5893]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture Seed"], "extent": [5893, 5908], "body": [{"type": "para", "indent": 4, "text": ["The random seed to determine which pieces will or won\u2019t be fractured when fracture ratio is lower than 1."], "extent": [5908, 6019]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connectivity Partition"], "extent": [6019, 6043], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [6062, 6072], "body": [{"type": "para", "indent": 8, "text": ["Do not further partition pieces into groups by connectivity."], "extent": [6072, 6146]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Overwrite Piece Numbering"], "extent": [6146, 6177], "body": [{"type": "para", "indent": 8, "text": ["Turning on this option will further divide the pieces into separate, connected groups of geometry. Normally each input cell point will create one output piece. However, with concave objects this can mean that disconnected pieces of geometry are placed in the same piece. This option allows the piece numbers to be overwritten by this operation, which is fast and acceptable if you don\u2019t need the piece numbers to match the input point numbers."], "extent": [6177, 6630]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "partition"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Cell Points "], "extent": [6630, 6650]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Scatter From"], "extent": [6650, 6665], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Volume"], "extent": [6665, 6677], "body": [{"type": "para", "indent": 8, "text": ["Scatters points based on the fog volume generated."], "extent": [6677, 6737]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Attribute"], "extent": [6737, 6752], "body": [{"type": "para", "indent": 8, "text": ["Scatters points based on the specified point attribute in the incoming geometry.\n        For example, the ", {"scheme": "Node", "value": "/nodes/sop/rbdpaint", "type": "link", "text": ["RBD Paint SOP"], "fullpath": "/nodes/sop/rbdpaint.html"}, " can be used to paint a ", {"type": "code", "text": ["density"]}, " attribute on the geometry."], "extent": [6752, 6961]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Name"], "extent": [6961, 6977], "body": [{"type": "para", "indent": 4, "text": ["The name of the point attribute to use as a density attribute when scattering points."], "extent": [6977, 7068]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points"], "extent": [649, 665], "body": [{"type": "para", "indent": 4, "text": ["The number of points to scatter."], "extent": [685, 723]}], "container": true, "attrs": {"id": "scatterpts"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points Scaling"], "extent": [723, 747], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [774, 784], "body": [{"type": "para", "indent": 8, "text": ["Do not affect the number of scattered points."], "extent": [784, 839]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Piece Volume"], "extent": [839, 866], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the piece\u2019s volume. "], "extent": [866, 941]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "text": [" "], "role": "item", "extent": [941, 956], "body": [{"type": "para", "indent": 12, "text": ["This is only available with the ", {"type": "ui", "text": ["Concrete"]}, " material."], "extent": [956, 1024]}, {"type": "para", "indent": 12, "text": ["Large pieces can generate a lot more points.  Use the ", {"type": "ui", "text": ["Remap Range"]}, " option for better control over the total number of points being generated."], "extent": [1024, 1182]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Max Axis Length"], "extent": [1182, 1212], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the piece\u2019s bounding box\u2019s maximum axis length."], "extent": [1212, 1314]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [1314, 1328], "body": [{"type": "para", "indent": 12, "text": ["This is only available with the ", {"type": "ui", "text": ["Concrete"]}, " material."], "extent": [1328, 1409]}, {"type": "para", "indent": 12, "text": ["Large pieces can generate a lot more points.  Use the ", {"type": "ui", "text": ["Remap Range"]}, " option for better control over the total number of points being generated."], "extent": [1409, 1567]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [1567, 1591], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the average value across the piece of the given attribute."], "extent": [1591, 1704]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "scatterptsscaling"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remap Range"], "extent": [1704, 1717], "body": [{"type": "para", "indent": 4, "text": ["Enables fitting the range of the piece\u2019s volume or max axis length value to a min and max range."], "extent": [1737, 1839]}, {"type": "para", "indent": 4, "text": ["Values outside the input range will be clamped to the input range."], "extent": [1839, 1911]}], "container": true, "attrs": {"id": "remaprange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Input Min/Max"], "extent": [1911, 1926], "body": [{"type": "para", "indent": 4, "text": ["Specifies the input\u2019s minimum and maximum values."], "extent": [1947, 2002]}], "container": true, "attrs": {"id": "inputminmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Min/Max"], "extent": [2002, 2018], "body": [{"type": "para", "indent": 4, "text": ["Specifies the output\u2019s minimum and maximum values."], "extent": [2040, 2096]}], "container": true, "attrs": {"id": "outputminmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points Attribute"], "extent": [2096, 2122], "body": [{"type": "para", "indent": 4, "text": ["The name of the primitive or point float attribute to use as multiplier. The average value across the piece being fractured will be used."], "extent": [2148, 2291]}], "container": true, "attrs": {"id": "scatterptsattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Seed"], "extent": [2291, 2305], "body": [{"type": "para", "indent": 4, "text": ["The random seed for scattering points."], "extent": [2326, 2370]}], "container": true, "attrs": {"id": "scatterseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Input Points"], "extent": [2370, 2388], "body": [{"type": "para", "indent": 4, "text": ["Use points from the fourth input."], "extent": [2409, 2452]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [2452, 2462], "body": [{"type": "para", "indent": 8, "text": ["If a name attribute exists on the points, only points with a matching name will be used for the piece being fractured."], "extent": [2462, 2598]}, {"type": "para", "indent": 8, "text": ["Wildcards are supported."], "extent": [2598, 2632]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "useinputpts"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Input Points"], "extent": [2632, 2646], "body": [{"type": "para", "indent": 4, "text": ["The group of points from the fourth input to use."], "extent": [2664, 2720]}], "container": true, "attrs": {"id": "inputpts"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Fog Volume "], "extent": [7435, 7454]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [7454, 7467], "body": [{"type": "para", "indent": 4, "text": ["The type of noise. Select from ", {"type": "ui", "text": ["None"]}, ", ", {"type": "ui", "text": ["Perlin Noise"]}, ", ", {"type": "ui", "text": ["Original Perlin Noise"]}, ", ", {"type": "ui", "text": ["Sparse Convolution Noise"]}, ", ", {"type": "ui", "text": ["Alligator Noise"]}, ", ", {"type": "ui", "text": ["Simplex Noise"]}, " and ", {"type": "ui", "text": ["Zero Centered Perlin"]}, "."], "extent": [7467, 7657]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Volume Resolution"], "extent": [7657, 7676], "body": [{"type": "para", "indent": 4, "text": ["The resolution of the fog volume.\n    The higher the resolution, the slower the fracturing time will be.\n    Smaller geometry will require higher volume resolution."], "extent": [7676, 7846]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Frequency"], "extent": [7846, 7863], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "concrete_volumenoisefreq#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Offset"], "extent": [7950, 7964], "body": [{"type": "para", "indent": 4, "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of ", {"type": "q", "text": ["panning"]}, " across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."], "extent": [5760, 6096]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6096, 6112], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "concrete_volumenoiseoffset#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cutoff Density"], "extent": [8055, 8071], "body": [{"type": "para", "indent": 4, "text": ["The low density level to cutoff at. Density below this value will be discarded."], "extent": [8071, 8157]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Chipping"], "extent": [8157, 8174], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Chipping"], "extent": [2720, 2737], "body": [{"type": "para", "indent": 4, "text": ["Break off corners of pieces to create chips."], "extent": [2761, 2811]}], "container": true, "attrs": {"id": "enablechipping"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Chipping Ratio"], "extent": [2811, 2827], "body": [{"type": "para", "indent": 4, "text": ["The overall ratio out of all the pieces to perform chipping on."], "extent": [2851, 2920]}], "container": true, "attrs": {"id": "chipping_ratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [2920, 2926], "body": [{"type": "para", "indent": 4, "text": ["The overall seed for the ratio of chipping."], "extent": [2949, 2998]}], "container": true, "attrs": {"id": "chipping_seed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Randomness"], "extent": [2998, 3010], "body": [{"type": "para", "indent": 4, "text": ["Randomizes the chipping ratio for each piece by this amount, when fracturing per piece."], "extent": [3039, 3132]}], "container": true, "attrs": {"id": "chipping_randomness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Corner Ratio"], "extent": [3132, 3146], "body": [{"type": "para", "indent": 4, "text": ["The ratio of corner points to use to generate chipping cutting planes."], "extent": [3176, 3252]}], "container": true, "attrs": {"id": "chipping_cornerratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Corner Depth"], "extent": [3252, 3266], "body": [{"type": "para", "indent": 4, "text": ["A normalized distance from corner to the center of the piece where the chipping plane will be instantiated."], "extent": [3296, 3409]}], "container": true, "attrs": {"id": "chipping_cornerdepth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Directional Noise"], "extent": [3409, 3428], "body": [{"type": "para", "indent": 4, "text": ["Amount of noise to add to the corner normal to align the cutting plane to."], "extent": [3463, 3544]}], "container": true, "attrs": {"id": "chipping_directionalnoise"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detriangulate"], "extent": [252, 267], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean.html"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean.html#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "attrs": {"id": "detriangulate"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Detail"], "extent": [8545, 8560], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Detail Size"], "extent": [8560, 8574], "body": [{"type": "para", "indent": 4, "text": ["The size of the polygons added for the edge and interior detail."], "extent": [8603, 8673]}], "container": true, "attrs": {"id": "concrete_detailsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Edge Detail"], "extent": [8673, 8686], "body": [{"type": "para", "indent": 4, "text": ["Use Boolean to obtain edge detail."], "extent": [8715, 8755]}], "container": true, "attrs": {"id": "concrete_edgedetail"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Height"], "extent": [8755, 8769], "body": [{"type": "para", "indent": 4, "text": ["Scales the amount of displacement."], "extent": [8769, 8809]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Element Size"], "extent": [8809, 8829], "body": [{"type": "para", "indent": 4, "text": ["The size of the noise pattern. Higher values give larger scaled details in the noise."], "extent": [8829, 8920]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [8920, 8932], "body": [{"type": "para", "indent": 4, "text": ["An increment for the noise element size between fracture iterations."], "extent": [8932, 9006]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [9006, 9016], "body": [{"type": "para", "indent": 8, "text": ["This parameter has no effect on the first fracture iteration."], "extent": [9016, 9087]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Level Multiplier"], "extent": [9087, 9105], "body": [{"type": "para", "indent": 4, "text": ["An increment for the noise height between fracture iterations."], "extent": [9105, 9173]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [9173, 9183], "body": [{"type": "para", "indent": 8, "text": ["This parameter has no effect on the first fracture iteration."], "extent": [9183, 9254]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detriangulate"], "extent": [252, 267], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean.html"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean.html#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "attrs": {"id": "detriangulate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interior Detail"], "extent": [9296, 9313], "body": [{"type": "para", "indent": 4, "text": ["Adds noise to the interior points, scaled based on their distance to the surface."], "extent": [9346, 9433]}], "container": true, "attrs": {"id": "concrete_interiordetail"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Amplitude"], "extent": [2467, 2485], "body": [{"type": "para", "indent": 4, "text": ["Scales the amount of displacement."], "extent": [2503, 2543]}], "container": true, "attrs": {"id": "noiseamp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [2543, 2555], "body": [{"type": "para", "indent": 4, "text": ["The type of noise added to the interior points."], "extent": [2574, 2627]}], "container": true, "attrs": {"id": "noisetype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [5544, 5555], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "freq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [5731, 5739], "body": [{"type": "para", "indent": 4, "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of ", {"type": "q", "text": ["panning"]}, " across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."], "extent": [5760, 6096]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6096, 6112], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Crease Weights"], "extent": [3544, 3560], "body": [{"type": "para", "indent": 4, "text": ["Creases control the strength of pull of the polygon faces on the subdivision surfaces, much like a magnet drawing the surface towards the reference polygon. \n    When this is turned on, a ", {"type": "code", "text": ["creaseweights"]}, " attribute will be created and the specified value will be applied to the vertices at the interface between the outside and inside faces. \n    See the ", {"scheme": "Node", "value": "/nodes/sop/subdivide", "type": "link", "text": ["Subdivide SOP"], "fullpath": "/nodes/sop/subdivide.html"}, " for more details."], "extent": [3590, 4002]}], "container": true, "attrs": {"id": "detail_creaseweights"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight"], "extent": [4002, 4010], "body": [{"type": "para", "indent": 4, "text": ["Specify the ", {"type": "code", "text": ["creaseweights"]}, " value. "], "extent": [4033, 4078]}], "container": true, "attrs": {"id": "detail_weight"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Proxy Geometry"], "extent": [9719, 9735], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Default"], "extent": [9767, 9780], "body": [{"type": "para", "indent": 8, "text": ["Uses the default voronoi fractured geometry."], "extent": [9780, 9833]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Convex Decomposition"], "extent": [9833, 9859], "body": [{"type": "para", "indent": 8, "text": ["Performs a convex decomposition from the fractured input geometry."], "extent": [9859, 9934]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Packed Spheres"], "extent": [9934, 9954], "body": [{"type": "para", "indent": 8, "text": ["Uses packed sphere primitives from the fractured input geometry."], "extent": [9954, 10028]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "concrete_proxygeometry"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Concavity"], "extent": [1599, 1614], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance from a point on the geometry to it\u2019s closest convex hull edge.\n    Reducing this value will produce convex hulls that are a closer fit to the input geometry, but the geometry may be split into more segments."], "extent": [1636, 1870]}], "container": true, "attrs": {"id": "maxconcavity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Voxel Size"], "extent": [1176, 1189], "body": [{"type": "para", "indent": 4, "text": ["The size of voxels in the output VDB volume.\n    Surface features smaller than this will not be in the output VDB."], "extent": [1209, 1333]}], "container": true, "attrs": {"id": "voxelsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Radius in Voxels"], "extent": [826, 848], "body": [{"type": "para", "indent": 4, "text": ["Determines the smallest sphere size in voxel units."], "extent": [867, 924]}], "container": true, "attrs": {"id": "radiusmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Radius in Voxels"], "extent": [924, 946], "body": [{"type": "para", "indent": 4, "text": ["Determines the largest sphere size in voxel units."], "extent": [965, 1021]}], "container": true, "attrs": {"id": "radiusmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Spheres"], "extent": [1021, 1034], "body": [{"type": "para", "indent": 4, "text": ["No more than this number of spheres are generated per VDB primitive."], "extent": [1054, 1132]}], "container": true, "attrs": {"id": "spheresmax"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [10272, 10292], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Search Radius"], "extent": [4078, 4093], "body": [{"type": "para", "indent": 4, "text": ["When re-wiring incoming constraints, specify the search radius within which to look for matching connections. "], "extent": [4127, 4243]}], "container": true, "attrs": {"id": "constraints_searchradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Tags"], "extent": [4243, 4253], "body": [{"type": "para", "indent": 4, "text": ["Creates a ", {"type": "code", "text": ["constraint_tag"]}, " string attribute on the constraint primitives instead of using groups. This allows for more flexibility and matches the Vellum constraints."], "extent": [4282, 4454]}], "container": true, "attrs": {"id": "constraints_usetags"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Constraint Properties"], "extent": [4454, 4483], "body": [{"type": "para", "indent": 4, "text": ["Applies constraint properties to the output constraint geometry.\n    The ", {"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": ["RBD Constraint Properties SOP"], "fullpath": "/nodes/sop/rbdconstraintproperties.html"}, " can be used for advanced constraint setups."], "extent": [4520, 4707]}], "container": true, "attrs": {"id": "constraints_applyproperties"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Glue Constraint Name"], "extent": [4707, 4729], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"type": "ui", "text": ["Data Name"]}, " of the constraint data (for example, the ", {"scheme": "Node", "value": "/nodes/dop/glueconrel", "type": "link", "text": ["Glue Constraint Relationship"], "fullpath": "/nodes/dop/glueconrel.html"}, ") to use in the DOP network.    "], "extent": [2883, 3040]}], "container": true, "attrs": {"id": "constraints_gluename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Color"], "extent": [4825, 4839], "body": [{"type": "para", "indent": 4, "text": ["Adds a color to the various constraints being created for quick identification."], "extent": [4872, 4957]}], "container": true, "attrs": {"id": "constraints_enablecolor"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "_fracture_common#constraints_color", "type": "include", "indent": 0, "role": "item", "extent": [10551, 10597]}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Primary Strength"], "extent": [10597, 10615], "body": [{"type": "para", "indent": 4, "text": ["The starting strength of the glue bonds of primary fracture."], "extent": [10615, 10681]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Level Multiplier"], "extent": [10681, 10699], "body": [{"type": "para", "indent": 4, "text": ["The number to multiply the primary strength with for each increment of fracture level."], "extent": [10699, 10791]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Chipping Strength"], "extent": [5045, 5064], "body": [{"type": "para", "indent": 4, "text": ["The strength of glue bonds for corner chips."], "extent": [5102, 5151]}], "container": true, "attrs": {"id": "constraints_chippingstrength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Strength Variance"], "extent": [4652, 4671], "body": [{"type": "para", "indent": 4, "text": ["Randomly varies the strength of each glue bond."], "extent": [4702, 4755]}], "container": true, "attrs": {"id": "glue_strengthvariance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Switch to Soft Constraint when Broken"], "extent": [10916, 10955], "body": [{"type": "para", "indent": 4, "text": ["Specifies a different constraint type to switch to if the glue constraint is broken by the ", {"scheme": "Node", "value": "/nodes/dop/bulletrbdsolver", "type": "link", "text": ["Bullet Solver"], "fullpath": "/nodes/dop/bulletrbdsolver.html"}, "."], "extent": [3368, 3506]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3506, 3516], "body": [{"type": "para", "indent": 8, "text": ["This parameter does not set attributes directly but determines which parameters are relevant to streamline the UI."], "extent": [3516, 3640]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft Constraint Name"], "extent": [11024, 11046], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"type": "ui", "text": ["Data Name"]}, " of the constraint data (for example, the ", {"scheme": "Node", "value": "/nodes/dop/bulletsoftconrel", "type": "link", "text": ["Bullet Soft Constraint Relationship"], "fullpath": "/nodes/dop/bulletsoftconrel.html"}, ") to use in the DOP network once the initial constraints are broken."], "extent": [4039, 4245]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Degrees of Freedom"], "extent": [11116, 11136], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether the constraint affects position, orientation, or both.\n    This does not apply to glue constraints, which work by simulating glued chunks together as a single object with a compound collision shape."], "extent": [3083, 3305]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness"], "extent": [1561, 1572], "body": [{"type": "para", "indent": 4, "text": ["Specifies the strength of the force that attempts to match the transforms of the two anchors."], "extent": [1591, 1690]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to the frequency of a spring."], "extent": [1690, 1750]}], "container": true, "attrs": {"id": "stiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping Ratio"], "extent": [1750, 1765], "body": [{"type": "para", "indent": 4, "text": ["Specifies how much damping is applied to the motion.\n    A value of 0 specifies no damping, and a value of 1 provides just enough damping to prevent oscillation.\n    Values between 0 and 1 allow oscillation (with some damping), and values greater than 1 provide increasingly damped motion that has no oscillation."], "extent": [1787, 2106]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to the damping ratio of a spring."], "extent": [2106, 2170]}], "container": true, "attrs": {"id": "dampingratio"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "glass", "container": true, "type": "h", "indent": 0, "text": ["Glass"], "extent": [11302, 11322], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [11322, 11329], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Flat Panes"], "extent": [11329, 11345], "body": [{"type": "para", "indent": 8, "text": ["When fracturing flat panes of glass, this option is faster than the ", {"type": "ui", "text": ["Curved Glass"]}, " option as it only performs sequential voronoi fractures for the radial cracks and the concentric cracks. When edge noise is enabled, it adds detail to the internal faces before applying the edge noise. While this is very efficient, it can introduce visible cracks between the pieces."], "extent": [11345, 11723]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Curved Glass"], "extent": [11723, 11741], "body": [{"type": "para", "indent": 8, "text": ["Select this option when fracturing curved glass. When edge noise is enabled, boolean fracturing is performed on the high res geometry sequentially for the radial cracks followed by the concentric cracks. This is slower than the ", {"type": "ui", "text": ["Flat Panes"]}, " mode which applies noise after the fracturing is performed, however it doesn\u2019t create visible cracks between the pieces."], "extent": [11741, 12114]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Guide Geometry"], "extent": [12114, 12130], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [12154, 12164], "body": [{"type": "para", "indent": 8, "text": ["No guide geometry."], "extent": [12164, 12191]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fractured Geometry"], "extent": [12191, 12215], "body": [{"type": "para", "indent": 8, "text": ["The group that is currently being fractured will be highlighted."], "extent": [12215, 12288]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Concentric Noise"], "extent": [12288, 12310], "body": [{"type": "para", "indent": 8, "text": ["Displays the noise used for determining the discontinuity for concentric cracks."], "extent": [12310, 12399]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Edge Noise"], "extent": [12399, 12415], "body": [{"type": "para", "indent": 8, "text": ["Displays the magnitude distribution of the edge noise."], "extent": [12415, 12478]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Constraint Network"], "extent": [12478, 12502], "body": [{"type": "para", "indent": 8, "text": ["Displays the constraint network."], "extent": [12502, 12545]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "glass_guidegeo"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Impact Points"], "extent": [12545, 12567], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use Scatter"], "extent": [12567, 12581], "body": [{"type": "para", "indent": 4, "text": ["Uses randomly scattered points on the surface as impact points."], "extent": [12581, 12650]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points"], "extent": [649, 665], "body": [{"type": "para", "indent": 4, "text": ["The number of points to scatter."], "extent": [685, 723]}], "container": true, "attrs": {"id": "scatterpts"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points Scaling"], "extent": [723, 747], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [774, 784], "body": [{"type": "para", "indent": 8, "text": ["Do not affect the number of scattered points."], "extent": [784, 839]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Piece Volume"], "extent": [839, 866], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the piece\u2019s volume. "], "extent": [866, 941]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "text": [" "], "role": "item", "extent": [941, 956], "body": [{"type": "para", "indent": 12, "text": ["This is only available with the ", {"type": "ui", "text": ["Concrete"]}, " material."], "extent": [956, 1024]}, {"type": "para", "indent": 12, "text": ["Large pieces can generate a lot more points.  Use the ", {"type": "ui", "text": ["Remap Range"]}, " option for better control over the total number of points being generated."], "extent": [1024, 1182]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Max Axis Length"], "extent": [1182, 1212], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the piece\u2019s bounding box\u2019s maximum axis length."], "extent": [1212, 1314]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [1314, 1328], "body": [{"type": "para", "indent": 12, "text": ["This is only available with the ", {"type": "ui", "text": ["Concrete"]}, " material."], "extent": [1328, 1409]}, {"type": "para", "indent": 12, "text": ["Large pieces can generate a lot more points.  Use the ", {"type": "ui", "text": ["Remap Range"]}, " option for better control over the total number of points being generated."], "extent": [1409, 1567]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [1567, 1591], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the average value across the piece of the given attribute."], "extent": [1591, 1704]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "scatterptsscaling"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points Attribute"], "extent": [2096, 2122], "body": [{"type": "para", "indent": 4, "text": ["The name of the primitive or point float attribute to use as multiplier. The average value across the piece being fractured will be used."], "extent": [2148, 2291]}], "container": true, "attrs": {"id": "scatterptsattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Seed"], "extent": [2291, 2305], "body": [{"type": "para", "indent": 4, "text": ["The random seed for scattering points."], "extent": [2326, 2370]}], "container": true, "attrs": {"id": "scatterseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Input Points"], "extent": [2370, 2388], "body": [{"type": "para", "indent": 4, "text": ["Use points from the fourth input."], "extent": [2409, 2452]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [2452, 2462], "body": [{"type": "para", "indent": 8, "text": ["If a name attribute exists on the points, only points with a matching name will be used for the piece being fractured."], "extent": [2462, 2598]}, {"type": "para", "indent": 8, "text": ["Wildcards are supported."], "extent": [2598, 2632]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "useinputpts"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Input Points"], "extent": [2632, 2646], "body": [{"type": "para", "indent": 4, "text": ["The group of points from the fourth input to use."], "extent": [2664, 2720]}], "container": true, "attrs": {"id": "inputpts"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Cracks"], "extent": [12898, 12913], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" Radial Crack "], "extent": [12913, 12935]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Radial Crack Number"], "extent": [12935, 12957], "body": [{"type": "para", "indent": 4, "text": ["The number of radial cracks to generate for each impact point."], "extent": [12957, 13025]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radial Crack Scaling"], "extent": [13025, 13047], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [13047, 13057], "body": [{"type": "para", "indent": 8, "text": ["Do not affect the number of radial cracks."], "extent": [13057, 13109]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [13109, 13133], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of radial cracks by the average value across the piece of the given attribute."], "extent": [13133, 13243]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radial Crack Attribute"], "extent": [13243, 13267], "body": [{"type": "para", "indent": 4, "text": ["The name of the primitive or point float attribute to use as multiplier. The average value across the piece being fractured will be used."], "extent": [13267, 13410]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number Variance"], "extent": [13410, 13427], "body": [{"type": "para", "indent": 4, "text": ["The variance in the number of radial cracks for each piece."], "extent": [13427, 13492]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number Seed"], "extent": [13492, 13505], "body": [{"type": "para", "indent": 4, "text": ["The seed for the variance of the number of radial cracks."], "extent": [13505, 13568]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radial Fracture ID"], "extent": [13568, 13588], "body": [{"type": "para", "indent": 4, "text": ["The fracture ID for this fracture. The output attributes and groups associated with this fracture will have this tag."], "extent": [13588, 13715]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Concentric Crack "], "extent": [13715, 13740]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Minimum Width"], "extent": [13740, 13756], "body": [{"type": "para", "indent": 4, "text": ["The minimum width between each concentric crack going outward radially."], "extent": [13756, 13833]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Width Scaling"], "extent": [13833, 13856], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [13856, 13866], "body": [{"type": "para", "indent": 8, "text": ["Do not affect the minimum width."], "extent": [13866, 13908]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [13908, 13932], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the minimum with by the average value across the piece of the given attribute."], "extent": [13932, 14031]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Width Attribute"], "extent": [14031, 14056], "body": [{"type": "para", "indent": 4, "text": ["The name of the primitive or point float attribute to use as multiplier. The average value across the piece being fractured will be used."], "extent": [14056, 14199]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Impact Spread"], "extent": [14199, 14214], "body": [{"type": "para", "indent": 4, "text": ["How far from the origin(s) the concentric cracks spread."], "extent": [14214, 14276]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Discontinuity Freq"], "extent": [14276, 14296], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the discontinuity noise for concentric cracks."], "extent": [14296, 14365]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Discontinuity Size"], "extent": [14365, 14385], "body": [{"type": "para", "indent": 4, "text": ["The amplitude of the discontinuity noise for concentric cracks."], "extent": [14385, 14454]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Concentric Fracture ID"], "extent": [14454, 14478], "body": [{"type": "para", "indent": 4, "text": ["The fracture ID for this fracture. The output attributes and groups associated with this fracture will have this tag."], "extent": [14478, 14602]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Chipping"], "extent": [14602, 14619], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Chipping"], "extent": [2720, 2737], "body": [{"type": "para", "indent": 4, "text": ["Break off corners of pieces to create chips."], "extent": [2761, 2811]}], "container": true, "attrs": {"id": "enablechipping"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Chipping Ratio"], "extent": [2811, 2827], "body": [{"type": "para", "indent": 4, "text": ["The overall ratio out of all the pieces to perform chipping on."], "extent": [2851, 2920]}], "container": true, "attrs": {"id": "chipping_ratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [2920, 2926], "body": [{"type": "para", "indent": 4, "text": ["The overall seed for the ratio of chipping."], "extent": [2949, 2998]}], "container": true, "attrs": {"id": "chipping_seed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Randomness"], "extent": [2998, 3010], "body": [{"type": "para", "indent": 4, "text": ["Randomizes the chipping ratio for each piece by this amount, when fracturing per piece."], "extent": [3039, 3132]}], "container": true, "attrs": {"id": "chipping_randomness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Corner Ratio"], "extent": [3132, 3146], "body": [{"type": "para", "indent": 4, "text": ["The ratio of corner points to use to generate chipping cutting planes."], "extent": [3176, 3252]}], "container": true, "attrs": {"id": "chipping_cornerratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Corner Depth"], "extent": [3252, 3266], "body": [{"type": "para", "indent": 4, "text": ["A normalized distance from corner to the center of the piece where the chipping plane will be instantiated."], "extent": [3296, 3409]}], "container": true, "attrs": {"id": "chipping_cornerdepth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Directional Noise"], "extent": [3409, 3428], "body": [{"type": "para", "indent": 4, "text": ["Amount of noise to add to the corner normal to align the cutting plane to."], "extent": [3463, 3544]}], "container": true, "attrs": {"id": "chipping_directionalnoise"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detriangulate"], "extent": [252, 267], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean.html"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean.html#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "attrs": {"id": "detriangulate"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Detail"], "extent": [14990, 15005], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Detail Size"], "extent": [15005, 15019], "body": [{"type": "para", "indent": 4, "text": ["The size of the polygons to add for the edge noise."], "extent": [15045, 15106]}], "container": true, "attrs": {"id": "glass_detailsize"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Edge Noise "], "extent": [15106, 15125]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Edge Noise"], "extent": [15125, 15145], "body": [{"type": "para", "indent": 4, "text": ["Adds noise to the cracks."], "extent": [15145, 15176]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fade From Origin"], "extent": [15176, 15194], "body": [{"type": "para", "indent": 4, "text": ["How far to fade off the edge noising from the fracture origins."], "extent": [15194, 15263]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fade From Border"], "extent": [15263, 15281], "body": [{"type": "para", "indent": 4, "text": ["How far to fade off the edge noising from the borders of the glass."], "extent": [15281, 15354]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Amplitude"], "extent": [2467, 2485], "body": [{"type": "para", "indent": 4, "text": ["Scales the amount of displacement."], "extent": [2503, 2543]}], "container": true, "attrs": {"id": "noiseamp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Frequency"], "extent": [15403, 15420], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [15476, 15486], "body": [{"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Noise Amplitude"]}, " and ", {"type": "ui", "text": ["Noise Frequency"]}, " can be driven via attributes on the mesh: ", {"type": "code", "text": ["amp"]}, " (float) and ", {"type": "code", "text": ["freq"]}, " (vector or float3) respectively."], "extent": [15486, 15639]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detriangulate"], "extent": [15639, 15654], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Mode"]}, " is set to ", {"type": "ui", "text": ["Curved Glass"]}, ","], "extent": [15654, 15700]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Detriangulate"], "extent": [252, 267], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean.html"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean.html#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "attrs": {"id": "detriangulate"}}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Proxy Geometry "], "extent": [15746, 15769]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use Convex Decomposition"], "extent": [15769, 15796], "body": [{"type": "para", "indent": 4, "text": ["Creates proxy geometry from the high-resolution pieces using a ", {"scheme": "Node", "value": "/nodes/sop/convexdecomposition", "type": "link", "text": ["convex decomposition"], "fullpath": "/nodes/sop/convexdecomposition.html"}, "."], "extent": [15837, 15958]}], "container": true, "attrs": {"id": "glass_enableconvexdecomposition"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Concavity"], "extent": [1599, 1614], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance from a point on the geometry to it\u2019s closest convex hull edge.\n    Reducing this value will produce convex hulls that are a closer fit to the input geometry, but the geometry may be split into more segments."], "extent": [1636, 1870]}], "container": true, "attrs": {"id": "maxconcavity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Crease Weights"], "extent": [3544, 3560], "body": [{"type": "para", "indent": 4, "text": ["Creases control the strength of pull of the polygon faces on the subdivision surfaces, much like a magnet drawing the surface towards the reference polygon. \n    When this is turned on, a ", {"type": "code", "text": ["creaseweights"]}, " attribute will be created and the specified value will be applied to the vertices at the interface between the outside and inside faces. \n    See the ", {"scheme": "Node", "value": "/nodes/sop/subdivide", "type": "link", "text": ["Subdivide SOP"], "fullpath": "/nodes/sop/subdivide.html"}, " for more details."], "extent": [3590, 4002]}], "container": true, "attrs": {"id": "detail_creaseweights"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight"], "extent": [4002, 4010], "body": [{"type": "para", "indent": 4, "text": ["Specify the ", {"type": "code", "text": ["creaseweights"]}, " value. "], "extent": [4033, 4078]}], "container": true, "attrs": {"id": "detail_weight"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [16105, 16125], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Search Radius"], "extent": [4078, 4093], "body": [{"type": "para", "indent": 4, "text": ["When re-wiring incoming constraints, specify the search radius within which to look for matching connections. "], "extent": [4127, 4243]}], "container": true, "attrs": {"id": "constraints_searchradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Tags"], "extent": [4243, 4253], "body": [{"type": "para", "indent": 4, "text": ["Creates a ", {"type": "code", "text": ["constraint_tag"]}, " string attribute on the constraint primitives instead of using groups. This allows for more flexibility and matches the Vellum constraints."], "extent": [4282, 4454]}], "container": true, "attrs": {"id": "constraints_usetags"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Constraint Properties"], "extent": [4454, 4483], "body": [{"type": "para", "indent": 4, "text": ["Applies constraint properties to the output constraint geometry.\n    The ", {"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": ["RBD Constraint Properties SOP"], "fullpath": "/nodes/sop/rbdconstraintproperties.html"}, " can be used for advanced constraint setups."], "extent": [4520, 4707]}], "container": true, "attrs": {"id": "constraints_applyproperties"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Glue Constraint Name"], "extent": [4707, 4729], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"type": "ui", "text": ["Data Name"]}, " of the constraint data (for example, the ", {"scheme": "Node", "value": "/nodes/dop/glueconrel", "type": "link", "text": ["Glue Constraint Relationship"], "fullpath": "/nodes/dop/glueconrel.html"}, ") to use in the DOP network.    "], "extent": [2883, 3040]}], "container": true, "attrs": {"id": "constraints_gluename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Color"], "extent": [4825, 4839], "body": [{"type": "para", "indent": 4, "text": ["Adds a color to the various constraints being created for quick identification."], "extent": [4872, 4957]}], "container": true, "attrs": {"id": "constraints_enablecolor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radial Color"], "extent": [16384, 16398], "body": [{"type": "para", "indent": 4, "text": ["Specifies the color for the radial constraints."], "extent": [16398, 16455]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Concentric Color"], "extent": [16455, 16473], "body": [{"type": "para", "indent": 4, "text": ["Specifies the color for the concentric constraints."], "extent": [16473, 16530]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radial Strength"], "extent": [16530, 16548], "body": [{"type": "para", "indent": 4, "text": ["The strength of the glue bonds between radial cracks."], "extent": [16548, 16607]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Concentric Strength"], "extent": [16607, 16628], "body": [{"type": "para", "indent": 4, "text": ["The strength of the glue bonds between concentric cracks."], "extent": [16628, 16691]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Chipping Strength"], "extent": [5045, 5064], "body": [{"type": "para", "indent": 4, "text": ["The strength of glue bonds for corner chips."], "extent": [5102, 5151]}], "container": true, "attrs": {"id": "constraints_chippingstrength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Strength Variance"], "extent": [4652, 4671], "body": [{"type": "para", "indent": 4, "text": ["Randomly varies the strength of each glue bond."], "extent": [4702, 4755]}], "container": true, "attrs": {"id": "glue_strengthvariance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Switch to Soft Constraint when Broken"], "extent": [16820, 16859], "body": [{"type": "para", "indent": 4, "text": ["Specifies a different constraint type to switch to if the glue constraint is broken by the ", {"scheme": "Node", "value": "/nodes/dop/bulletrbdsolver", "type": "link", "text": ["Bullet Solver"], "fullpath": "/nodes/dop/bulletrbdsolver.html"}, "."], "extent": [3368, 3506]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3506, 3516], "body": [{"type": "para", "indent": 8, "text": ["This parameter does not set attributes directly but determines which parameters are relevant to streamline the UI."], "extent": [3516, 3640]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft Constraint Name"], "extent": [16932, 16954], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"type": "ui", "text": ["Data Name"]}, " of the constraint data (for example, the ", {"scheme": "Node", "value": "/nodes/dop/bulletsoftconrel", "type": "link", "text": ["Bullet Soft Constraint Relationship"], "fullpath": "/nodes/dop/bulletsoftconrel.html"}, ") to use in the DOP network once the initial constraints are broken."], "extent": [4039, 4245]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Degrees of Freedom"], "extent": [17024, 17044], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether the constraint affects position, orientation, or both.\n    This does not apply to glue constraints, which work by simulating glued chunks together as a single object with a compound collision shape."], "extent": [3083, 3305]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness"], "extent": [1561, 1572], "body": [{"type": "para", "indent": 4, "text": ["Specifies the strength of the force that attempts to match the transforms of the two anchors."], "extent": [1591, 1690]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to the frequency of a spring."], "extent": [1690, 1750]}], "container": true, "attrs": {"id": "stiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping Ratio"], "extent": [1750, 1765], "body": [{"type": "para", "indent": 4, "text": ["Specifies how much damping is applied to the motion.\n    A value of 0 specifies no damping, and a value of 1 provides just enough damping to prevent oscillation.\n    Values between 0 and 1 allow oscillation (with some damping), and values greater than 1 provide increasingly damped motion that has no oscillation."], "extent": [1787, 2106]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to the damping ratio of a spring."], "extent": [2106, 2170]}], "container": true, "attrs": {"id": "dampingratio"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "wood", "container": true, "type": "h", "indent": 0, "text": ["Wood"], "extent": [17215, 17233], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Guide Geometry"], "extent": [17233, 17250], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [17273, 17283], "body": [{"type": "para", "indent": 8, "text": ["No guide geometry."], "extent": [17283, 17310]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fractured Geometry"], "extent": [17310, 17334], "body": [{"type": "para", "indent": 8, "text": ["The group that is currently being fractured will be highlighted."], "extent": [17334, 17407]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Grains"], "extent": [17407, 17419], "body": [{"type": "para", "indent": 8, "text": ["Displays the cutting planes for the grains."], "extent": [17419, 17471]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cuts"], "extent": [17471, 17481], "body": [{"type": "para", "indent": 8, "text": ["Displays the cutting planes for the cuts."], "extent": [17481, 17531]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Splinters"], "extent": [17531, 17546], "body": [{"type": "para", "indent": 8, "text": ["Displays the cutting planes for the splinters."], "extent": [17546, 17601]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Constraint Network"], "extent": [17601, 17625], "body": [{"type": "para", "indent": 8, "text": ["Displays the constraint network."], "extent": [17625, 17668]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "wood_guidegeo"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Grain"], "extent": [17668, 17682], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Grain"], "extent": [17682, 17697], "body": [{"type": "para", "indent": 4, "text": ["Creates grain lines along the ", {"type": "ui", "text": ["Fracture Direction"]}, ", which typically is the geometry\u2019s longest axis."], "extent": [17697, 17804]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture Direction"], "extent": [16, 36], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Auto (Bounding Box)"], "extent": [64, 89], "body": [{"type": "para", "indent": 8, "text": ["Determines the direction automatically based on the oriented bounding box."], "extent": [89, 173]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Vector"], "extent": [173, 185], "body": [{"type": "para", "indent": 8, "text": ["Uses the vector specified as the direction of fracturing."], "extent": [185, 252]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fracturedirection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Spacing"], "extent": [17850, 17865], "body": [{"type": "para", "indent": 4, "text": ["The spacing between grain lines."], "extent": [17865, 17903]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Spacing Scaling"], "extent": [17903, 17926], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [17926, 17936], "body": [{"type": "para", "indent": 8, "text": ["Do not affect the spacing."], "extent": [17936, 17972]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [17972, 17996], "body": [{"type": "para", "indent": 8, "text": ["Divides the spacing by the average value across the piece of the given attribute. A smaller value will result in larger spacing."], "extent": [17996, 18134]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Spacing Attribute"], "extent": [18134, 18159], "body": [{"type": "para", "indent": 4, "text": ["The name of the primitive or point float attribute to use as multiplier. The average value across the piece being fractured will be used."], "extent": [18159, 18302]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Offset"], "extent": [18302, 18316], "body": [{"type": "para", "indent": 4, "text": ["The size of offset randomly applied to each grain line."], "extent": [18316, 18377]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Offset Seed"], "extent": [18377, 18396], "body": [{"type": "para", "indent": 4, "text": ["The seed of the random offset."], "extent": [18396, 18432]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Grain Noise "], "extent": [18432, 18452]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Height"], "extent": [18452, 18461], "body": [{"type": "para", "indent": 4, "text": ["Displacement amount of the height."], "extent": [530, 570]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size"], "extent": [18504, 18518], "body": [{"type": "para", "indent": 4, "text": ["Distance between peaks of lowest frequency noise."], "extent": [605, 660]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Detail Size"], "extent": [18566, 18585], "body": [{"type": "para", "indent": 4, "text": ["The size of polygons used to cut the grain lines. "], "extent": [18585, 18641]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Fracture ID"], "extent": [18641, 18660], "body": [{"type": "para", "indent": 4, "text": ["The fracture ID for this fracture. The output attributes and groups associated with this fracture will have this tag."], "extent": [18660, 18784]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Cut"], "extent": [18784, 18796], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Cut"], "extent": [18796, 18809], "body": [{"type": "para", "indent": 4, "text": ["Creates cuts in the opposite direction of the grain lines."], "extent": [18809, 18873]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture Direction"], "extent": [16, 36], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Auto (Bounding Box)"], "extent": [64, 89], "body": [{"type": "para", "indent": 8, "text": ["Determines the direction automatically based on the oriented bounding box."], "extent": [89, 173]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Vector"], "extent": [173, 185], "body": [{"type": "para", "indent": 8, "text": ["Uses the vector specified as the direction of fracturing."], "extent": [185, 252]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fracturedirection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Skew Angle"], "extent": [18919, 18931], "body": [{"type": "para", "indent": 4, "text": ["Rotates the cutting plane along the axis perpendicular to the grain cut direction, when ", {"type": "ui", "text": ["Fracture Direction"]}, " is set to ", {"type": "ui", "text": ["Auto"]}, "."], "extent": [18931, 19067]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Spacing"], "extent": [19067, 19080], "body": [{"type": "para", "indent": 4, "text": ["The spacing between cuts."], "extent": [19080, 19111]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Spacing Scaling"], "extent": [19111, 19132], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [19132, 19142], "body": [{"type": "para", "indent": 8, "text": ["Do not affect the spacing."], "extent": [19142, 19178]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [19178, 19202], "body": [{"type": "para", "indent": 8, "text": ["Divides the spacing by the average value across the piece of the given attribute. A smaller value will result in larger spacing."], "extent": [19202, 19340]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Spacing Attribute"], "extent": [19340, 19363], "body": [{"type": "para", "indent": 4, "text": ["The name of the primitive or point float attribute to use as multiplier. The average value across the piece being fractured will be used."], "extent": [19363, 19506]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Offset"], "extent": [19506, 19518], "body": [{"type": "para", "indent": 4, "text": ["The size of offset randomly applied to each cut."], "extent": [19518, 19572]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Offset Seed"], "extent": [19572, 19589], "body": [{"type": "para", "indent": 4, "text": ["The seed of the random offset."], "extent": [19589, 19629]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Curve Noise "], "extent": [19629, 19649]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Height"], "extent": [19649, 19658], "body": [{"type": "para", "indent": 4, "text": ["Displacement amount of the height."], "extent": [530, 570]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size"], "extent": [19701, 19715], "body": [{"type": "para", "indent": 4, "text": ["Distance between peaks of lowest frequency noise."], "extent": [605, 660]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Splinters "], "extent": [19763, 19781]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Splinter Density"], "extent": [19781, 19800], "body": [{"type": "para", "indent": 4, "text": ["The amount of splinters for each cut."], "extent": [19800, 19843]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Splinter Length"], "extent": [19843, 19860], "body": [{"type": "para", "indent": 4, "text": ["The length of the splinters."], "extent": [19860, 19894]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Fracture ID"], "extent": [19894, 19911], "body": [{"type": "para", "indent": 4, "text": ["The fracture ID for this fracture. The output attributes and groups associated with this fracture will have this tag."], "extent": [19911, 20035]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Detail"], "extent": [20035, 20050], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Detriangulate"], "extent": [252, 267], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean.html"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean.html#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "attrs": {"id": "detriangulate"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Proxy Geometry "], "extent": [20093, 20116]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use Convex Decomposition"], "extent": [20116, 20143], "body": [{"type": "para", "indent": 4, "text": ["Creates proxy geometry from the high-resolution pieces using a ", {"scheme": "Node", "value": "/nodes/sop/convexdecomposition", "type": "link", "text": ["convex decomposition"], "fullpath": "/nodes/sop/convexdecomposition.html"}, "."], "extent": [20143, 20264]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Concavity"], "extent": [1599, 1614], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance from a point on the geometry to it\u2019s closest convex hull edge.\n    Reducing this value will produce convex hulls that are a closer fit to the input geometry, but the geometry may be split into more segments."], "extent": [1636, 1870]}], "container": true, "attrs": {"id": "maxconcavity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Crease Weights"], "extent": [3544, 3560], "body": [{"type": "para", "indent": 4, "text": ["Creases control the strength of pull of the polygon faces on the subdivision surfaces, much like a magnet drawing the surface towards the reference polygon. \n    When this is turned on, a ", {"type": "code", "text": ["creaseweights"]}, " attribute will be created and the specified value will be applied to the vertices at the interface between the outside and inside faces. \n    See the ", {"scheme": "Node", "value": "/nodes/sop/subdivide", "type": "link", "text": ["Subdivide SOP"], "fullpath": "/nodes/sop/subdivide.html"}, " for more details."], "extent": [3590, 4002]}], "container": true, "attrs": {"id": "detail_creaseweights"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight"], "extent": [4002, 4010], "body": [{"type": "para", "indent": 4, "text": ["Specify the ", {"type": "code", "text": ["creaseweights"]}, " value. "], "extent": [4033, 4078]}], "container": true, "attrs": {"id": "detail_weight"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Cluster"], "extent": [20411, 20427], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Cluster"], "extent": [20427, 20444], "body": [{"type": "para", "indent": 4, "text": ["Clusters fractured pieces together into larger chunks. This can produce more realistic pieces of broken wood."], "extent": [20444, 20559]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cluster Type"], "extent": [613, 627], "body": [{"type": "para", "indent": 4, "text": ["Specifies how to apply the clustering to the input geometry."], "extent": [648, 714]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Combine Pieces"], "extent": [714, 734], "body": [{"type": "para", "indent": 8, "text": ["Adjusts the ", {"type": "code", "text": ["name"]}, " primitive attribute to combine pieces into clusters.\n        This will result in fewer objects in the simulation.\n        The constraint geometry is also updated to reflect the new pieces."], "extent": [734, 951]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Group Constraints"], "extent": [951, 974], "body": [{"type": "para", "indent": 8, "text": ["The input geometry is not modified, but primitive groups are added to the constraint geometry to identify constraints between clusters, internal constraints in a cluster, etc.\n        This can be used with the ", {"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": ["RBD Constraint Properties SOP"], "fullpath": "/nodes/sop/rbdconstraintproperties.html"}, " to, for example, create stronger constraints between pieces in the same cluster.\n        With this approach, the clustered chunks may be broken apart during the simulation by breaking the constraints within a cluster."], "extent": [974, 1476]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "clustertype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [2926, 2934], "body": [{"type": "para", "indent": 4, "text": ["The offset of the cellular noise added to the input points."], "extent": [2950, 3015]}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Jitter"], "extent": [3015, 3023], "body": [{"type": "para", "indent": 4, "text": ["The jitter of the cellular noise added to the input points."], "extent": [3039, 3104]}], "container": true, "attrs": {"id": "jitter"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Size"], "extent": [3104, 3110], "body": [{"type": "para", "indent": 4, "text": ["The size of the cells for the noise added to the input points.\n    This roughly corresponds to the size of the clusters."], "extent": [3124, 3250]}], "container": true, "attrs": {"id": "size"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Random Detachment"], "extent": [3250, 3269], "body": [{"type": "para", "indent": 4, "text": ["Randomly detach pieces from clusters."], "extent": [3291, 3334]}], "container": true, "attrs": {"id": "randomdetach"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detach Ratio"], "extent": [3409, 3423], "body": [{"type": "para", "indent": 4, "text": ["The probability that a particular piece will be detached."], "extent": [3444, 3507]}], "container": true, "attrs": {"id": "detachratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detach Seed"], "extent": [3334, 3347], "body": [{"type": "para", "indent": 4, "text": ["The random seed used for detachment."], "extent": [3367, 3409]}], "container": true, "attrs": {"id": "detachseed"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [20858, 20878], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Search Radius"], "extent": [4078, 4093], "body": [{"type": "para", "indent": 4, "text": ["When re-wiring incoming constraints, specify the search radius within which to look for matching connections. "], "extent": [4127, 4243]}], "container": true, "attrs": {"id": "constraints_searchradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Tags"], "extent": [4243, 4253], "body": [{"type": "para", "indent": 4, "text": ["Creates a ", {"type": "code", "text": ["constraint_tag"]}, " string attribute on the constraint primitives instead of using groups. This allows for more flexibility and matches the Vellum constraints."], "extent": [4282, 4454]}], "container": true, "attrs": {"id": "constraints_usetags"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Constraint Properties"], "extent": [4454, 4483], "body": [{"type": "para", "indent": 4, "text": ["Applies constraint properties to the output constraint geometry.\n    The ", {"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": ["RBD Constraint Properties SOP"], "fullpath": "/nodes/sop/rbdconstraintproperties.html"}, " can be used for advanced constraint setups."], "extent": [4520, 4707]}], "container": true, "attrs": {"id": "constraints_applyproperties"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Glue Constraint Name"], "extent": [4707, 4729], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"type": "ui", "text": ["Data Name"]}, " of the constraint data (for example, the ", {"scheme": "Node", "value": "/nodes/dop/glueconrel", "type": "link", "text": ["Glue Constraint Relationship"], "fullpath": "/nodes/dop/glueconrel.html"}, ") to use in the DOP network.    "], "extent": [2883, 3040]}], "container": true, "attrs": {"id": "constraints_gluename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Color"], "extent": [4825, 4839], "body": [{"type": "para", "indent": 4, "text": ["Adds a color to the various constraints being created for quick identification."], "extent": [4872, 4957]}], "container": true, "attrs": {"id": "constraints_enablecolor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Color"], "extent": [21137, 21150], "body": [{"type": "para", "indent": 4, "text": ["Specifies the color for the grain constraints."], "extent": [21150, 21202]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Color"], "extent": [21202, 21213], "body": [{"type": "para", "indent": 4, "text": ["Specifies the color for the cut constraints."], "extent": [21213, 21263]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grain Strength"], "extent": [21263, 21279], "body": [{"type": "para", "indent": 4, "text": ["The strength of glue bonds between grains."], "extent": [21279, 21327]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Strength"], "extent": [21327, 21341], "body": [{"type": "para", "indent": 4, "text": ["The strength of glue bonds between cuts and splinters."], "extent": [21341, 21401]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Strength Variance"], "extent": [4652, 4671], "body": [{"type": "para", "indent": 4, "text": ["Randomly varies the strength of each glue bond."], "extent": [4702, 4755]}], "container": true, "attrs": {"id": "glue_strengthvariance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Switch to Soft Constraint when Broken"], "extent": [21473, 21512], "body": [{"type": "para", "indent": 4, "text": ["Specifies a different constraint type to switch to if the glue constraint is broken by the ", {"scheme": "Node", "value": "/nodes/dop/bulletrbdsolver", "type": "link", "text": ["Bullet Solver"], "fullpath": "/nodes/dop/bulletrbdsolver.html"}, "."], "extent": [3368, 3506]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3506, 3516], "body": [{"type": "para", "indent": 8, "text": ["This parameter does not set attributes directly but determines which parameters are relevant to streamline the UI."], "extent": [3516, 3640]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft Constraint Name"], "extent": [21581, 21603], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"type": "ui", "text": ["Data Name"]}, " of the constraint data (for example, the ", {"scheme": "Node", "value": "/nodes/dop/bulletsoftconrel", "type": "link", "text": ["Bullet Soft Constraint Relationship"], "fullpath": "/nodes/dop/bulletsoftconrel.html"}, ") to use in the DOP network once the initial constraints are broken."], "extent": [4039, 4245]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Degrees of Freedom"], "extent": [21673, 21693], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether the constraint affects position, orientation, or both.\n    This does not apply to glue constraints, which work by simulating glued chunks together as a single object with a compound collision shape."], "extent": [3083, 3305]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness"], "extent": [1561, 1572], "body": [{"type": "para", "indent": 4, "text": ["Specifies the strength of the force that attempts to match the transforms of the two anchors."], "extent": [1591, 1690]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to the frequency of a spring."], "extent": [1690, 1750]}], "container": true, "attrs": {"id": "stiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping Ratio"], "extent": [1750, 1765], "body": [{"type": "para", "indent": 4, "text": ["Specifies how much damping is applied to the motion.\n    A value of 0 specifies no damping, and a value of 1 provides just enough damping to prevent oscillation.\n    Values between 0 and 1 allow oscillation (with some damping), and values greater than 1 provide increasingly damped motion that has no oscillation."], "extent": [1787, 2106]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to the damping ratio of a spring."], "extent": [2106, 2170]}], "container": true, "attrs": {"id": "dampingratio"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "custom", "container": true, "type": "h", "indent": 0, "text": ["Custom"], "extent": [21864, 21886], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Guide Geometry"], "extent": [21886, 21903], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [21928, 21938], "body": [{"type": "para", "indent": 8, "text": ["No guide geometry."], "extent": [21938, 21965]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fractured Geometry"], "extent": [21965, 21989], "body": [{"type": "para", "indent": 8, "text": ["The group that is currently being fractured will be highlighted."], "extent": [21989, 22062]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Volume"], "extent": [22062, 22074], "body": [{"type": "para", "indent": 8, "text": ["Displays the volume distribution used for scattering."], "extent": [22074, 22136]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cutter Geometry"], "extent": [22136, 22157], "body": [{"type": "para", "indent": 8, "text": ["Displays the cutting geometry."], "extent": [22157, 22196]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Edge Detail"], "extent": [22196, 22213], "body": [{"type": "para", "indent": 8, "text": ["Displays the cutting geometry used to generate the edge detail."], "extent": [22213, 22285]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Constraint Network"], "extent": [22285, 22309], "body": [{"type": "para", "indent": 8, "text": ["Displays the constraint network."], "extent": [22309, 22351]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "custom_guidegeo"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Primary Fracture"], "extent": [22351, 22376], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Treat As"], "extent": [22376, 22387], "body": [{"type": "para", "indent": 4, "text": ["Whether to treat this geometry like the boundary of a solid object, or as a flat surface with no interior or exterior."], "extent": [14840, 14964]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Treat Cutting Geometry As"], "extent": [22431, 22458], "body": [{"type": "para", "indent": 4, "text": ["Similar to ", {"type": "ui", "text": ["Treat As"]}, ". This is only applicable to the cutting geometry when scattering spheres or using custom cutting geometry."], "extent": [22458, 22594]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detriangulate"], "extent": [252, 267], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean.html"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean.html#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "attrs": {"id": "detriangulate"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Cutting Geometry "], "extent": [22636, 22661]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Scatter Cutting Geo"], "extent": [22661, 22683], "body": [{"type": "para", "indent": 4, "text": ["Use scattered cutting geometry for fracturing."], "extent": [22683, 22735]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter From"], "extent": [22735, 22749], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Volume"], "extent": [22749, 22761], "body": [{"type": "para", "indent": 8, "text": ["Scatters points based on the fog volume generated."], "extent": [22761, 22821]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Attribute"], "extent": [22821, 22836], "body": [{"type": "para", "indent": 8, "text": ["Scatters points based on the specified point attribute in the incoming geometry.\n        For example, the ", {"scheme": "Node", "value": "/nodes/sop/rbdpaint", "type": "link", "text": ["RBD Paint SOP"], "fullpath": "/nodes/sop/rbdpaint.html"}, " can be used to paint a ", {"type": "code", "text": ["density"]}, " attribute on the geometry."], "extent": [22836, 23045]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cutter Geo"], "extent": [23045, 23057], "body": [{"type": "para", "indent": 4, "text": ["Select the type of scattered cutting geometry."], "extent": [23057, 23109]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Grid"], "extent": [23109, 23119], "body": [{"type": "para", "indent": 8, "text": ["Uses a grid to perform cuts."], "extent": [23119, 23157]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sphere"], "extent": [23157, 23169], "body": [{"type": "para", "indent": 8, "text": ["Uses a polygon sphere to perform cuts."], "extent": [23169, 23217]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Input Geo"], "extent": [23217, 23232], "body": [{"type": "para", "indent": 8, "text": ["Uses cutter geometry from the fourth input."], "extent": [23232, 23285]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [23285, 23299], "body": [{"type": "para", "indent": 12, "text": ["If a name prim attribute exists on the geometry, only prims with a matching name will be used for the piece being fractured.\n            Wildcards are supported."], "extent": [23299, 23474]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Name"], "extent": [23474, 23490], "body": [{"type": "para", "indent": 4, "text": ["The name of the point attribute to use as a density attribute when scattering points."], "extent": [23490, 23581]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points"], "extent": [649, 665], "body": [{"type": "para", "indent": 4, "text": ["The number of points to scatter."], "extent": [685, 723]}], "container": true, "attrs": {"id": "scatterpts"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points Scaling"], "extent": [723, 747], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [774, 784], "body": [{"type": "para", "indent": 8, "text": ["Do not affect the number of scattered points."], "extent": [784, 839]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Piece Volume"], "extent": [839, 866], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the piece\u2019s volume. "], "extent": [866, 941]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "text": [" "], "role": "item", "extent": [941, 956], "body": [{"type": "para", "indent": 12, "text": ["This is only available with the ", {"type": "ui", "text": ["Concrete"]}, " material."], "extent": [956, 1024]}, {"type": "para", "indent": 12, "text": ["Large pieces can generate a lot more points.  Use the ", {"type": "ui", "text": ["Remap Range"]}, " option for better control over the total number of points being generated."], "extent": [1024, 1182]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Max Axis Length"], "extent": [1182, 1212], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the piece\u2019s bounding box\u2019s maximum axis length."], "extent": [1212, 1314]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [1314, 1328], "body": [{"type": "para", "indent": 12, "text": ["This is only available with the ", {"type": "ui", "text": ["Concrete"]}, " material."], "extent": [1328, 1409]}, {"type": "para", "indent": 12, "text": ["Large pieces can generate a lot more points.  Use the ", {"type": "ui", "text": ["Remap Range"]}, " option for better control over the total number of points being generated."], "extent": [1409, 1567]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [1567, 1591], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the average value across the piece of the given attribute."], "extent": [1591, 1704]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "scatterptsscaling"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Points Attribute"], "extent": [2096, 2122], "body": [{"type": "para", "indent": 4, "text": ["The name of the primitive or point float attribute to use as multiplier. The average value across the piece being fractured will be used."], "extent": [2148, 2291]}], "container": true, "attrs": {"id": "scatterptsattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Seed"], "extent": [2291, 2305], "body": [{"type": "para", "indent": 4, "text": ["The random seed for scattering points."], "extent": [2326, 2370]}], "container": true, "attrs": {"id": "scatterseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scatter Normal"], "extent": [23751, 23767], "body": [{"type": "para", "indent": 4, "text": ["The normal for the volume scattered points to orient the cutting geo."], "extent": [23767, 23842]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Randomize Normal"], "extent": [23842, 23860], "body": [{"type": "para", "indent": 4, "text": ["Randomizes the normal used to orient the cutting geo. "], "extent": [23860, 23920]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Input Geo"], "extent": [23920, 23935], "body": [{"type": "para", "indent": 4, "text": ["Use additional cutter geometry from the fourth input."], "extent": [23935, 23998]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [23998, 24008], "body": [{"type": "para", "indent": 8, "text": ["If a name prim attribute exists on the geometry, only prims with a matching name will be used for the piece being fractured.\n        Wildcards are supported."], "extent": [24008, 24175]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Input Cutting Geo"], "extent": [24175, 24194], "body": [{"type": "para", "indent": 4, "text": ["Specifies a group from the fourth input geometry to use for fracturing."], "extent": [24194, 24271]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Trim Cutting Geometry"], "extent": [24271, 24294], "body": [{"type": "para", "indent": 4, "text": ["Trims the cutting geometry for better performance."], "extent": [24308, 24364]}], "container": true, "attrs": {"id": "trim"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detriangulate Cutting Geometry"], "extent": [24364, 24396], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean.html"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean.html#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Fog Volume "], "extent": [24443, 24462]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [24462, 24475], "body": [{"type": "para", "indent": 4, "text": ["The type of noise. Select from ", {"type": "ui", "text": ["None"]}, ", ", {"type": "ui", "text": ["Perlin Noise"]}, ", ", {"type": "ui", "text": ["Original Perlin Noise"]}, ", ", {"type": "ui", "text": ["Sparse Convolution Noise"]}, ", ", {"type": "ui", "text": ["Alligator Noise"]}, ", ", {"type": "ui", "text": ["Simplex Noise"]}, " and ", {"type": "ui", "text": ["Zero Centered Perlin"]}], "extent": [24475, 24664]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Volume Resolution"], "extent": [24664, 24683], "body": [{"type": "para", "indent": 4, "text": ["The resolution of the fog volume.\n    The higher the resolution, the slower the fracturing time will be.\n    Smaller geometry will require higher volume resolution."], "extent": [24683, 24853]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Frequency"], "extent": [24853, 24870], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Offset"], "extent": [24922, 24936], "body": [{"type": "para", "indent": 4, "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of ", {"type": "q", "text": ["panning"]}, " across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."], "extent": [5760, 6096]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6096, 6112], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cutoff Density"], "extent": [24990, 25006], "body": [{"type": "para", "indent": 4, "text": ["The low density level to cutoff at. Density below this value will be discarded."], "extent": [25006, 25091]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fracture ID"], "extent": [25091, 25104], "body": [{"type": "para", "indent": 4, "text": ["The fracture ID for this fracture. The output attributes and groups associated with this fracture will have this tag."], "extent": [25104, 25227]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Output Groups "], "extent": [25227, 25249]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Pieces Inside Cutting Geometry"], "extent": [25249, 25282], "body": [{"type": "para", "indent": 4, "text": ["Creates a primitive group containing the pieces that are enclosed by the cutting geometry.\n    This is supported when the input geometry and cutting geometry are both treated as a solid."], "extent": [25282, 25474]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Surface Inside Cutting Geometry"], "extent": [25474, 25507], "body": [{"type": "para", "indent": 4, "text": ["Creates a group containing the polygons from the original input geometry that are enclosed by the cutting geometry.\n    This is supported when the cutting geometry is treated as a solid."], "extent": [25507, 25699]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interior Seams"], "extent": [25699, 25715], "body": [{"type": "para", "indent": 4, "text": ["Creates a group containing edges representing the seams where the cutting geometry intersects itself."], "extent": [25715, 25822]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exterior Seams"], "extent": [25822, 25838], "body": [{"type": "para", "indent": 4, "text": ["Creates a group containing edges representing the seams where the cutting geometry intersects the original input geometry."], "extent": [25838, 25966]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Chipping"], "extent": [25966, 25983], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Chipping"], "extent": [2720, 2737], "body": [{"type": "para", "indent": 4, "text": ["Break off corners of pieces to create chips."], "extent": [2761, 2811]}], "container": true, "attrs": {"id": "enablechipping"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Chipping Ratio"], "extent": [2811, 2827], "body": [{"type": "para", "indent": 4, "text": ["The overall ratio out of all the pieces to perform chipping on."], "extent": [2851, 2920]}], "container": true, "attrs": {"id": "chipping_ratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [2920, 2926], "body": [{"type": "para", "indent": 4, "text": ["The overall seed for the ratio of chipping."], "extent": [2949, 2998]}], "container": true, "attrs": {"id": "chipping_seed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Randomness"], "extent": [2998, 3010], "body": [{"type": "para", "indent": 4, "text": ["Randomizes the chipping ratio for each piece by this amount, when fracturing per piece."], "extent": [3039, 3132]}], "container": true, "attrs": {"id": "chipping_randomness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Corner Ratio"], "extent": [3132, 3146], "body": [{"type": "para", "indent": 4, "text": ["The ratio of corner points to use to generate chipping cutting planes."], "extent": [3176, 3252]}], "container": true, "attrs": {"id": "chipping_cornerratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Corner Depth"], "extent": [3252, 3266], "body": [{"type": "para", "indent": 4, "text": ["A normalized distance from corner to the center of the piece where the chipping plane will be instantiated."], "extent": [3296, 3409]}], "container": true, "attrs": {"id": "chipping_cornerdepth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Directional Noise"], "extent": [3409, 3428], "body": [{"type": "para", "indent": 4, "text": ["Amount of noise to add to the corner normal to align the cutting plane to."], "extent": [3463, 3544]}], "container": true, "attrs": {"id": "chipping_directionalnoise"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detriangulate"], "extent": [252, 267], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean.html"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean.html#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "attrs": {"id": "detriangulate"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Detail"], "extent": [26354, 26369], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Detail Size"], "extent": [26369, 26383], "body": [{"type": "para", "indent": 4, "text": ["The size of the polygons added for the edge and interior detail."], "extent": [26383, 26453]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Edge Detail"], "extent": [26453, 26466], "body": [{"type": "para", "indent": 4, "text": ["Use Boolean to obtain edge detail."], "extent": [26466, 26506]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Height"], "extent": [26506, 26520], "body": [{"type": "para", "indent": 4, "text": ["Scales the amount of displacement."], "extent": [26520, 26560]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Element Size"], "extent": [26560, 26580], "body": [{"type": "para", "indent": 4, "text": ["The size of the noise pattern. Higher values give larger scaled details in the noise."], "extent": [26580, 26671]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interior Detail"], "extent": [26671, 26688], "body": [{"type": "para", "indent": 4, "text": ["Adds noise to the interior points, scaled based on their distance to the surface."], "extent": [26688, 26775]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Amplitude"], "extent": [2467, 2485], "body": [{"type": "para", "indent": 4, "text": ["Scales the amount of displacement."], "extent": [2503, 2543]}], "container": true, "attrs": {"id": "noiseamp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [2543, 2555], "body": [{"type": "para", "indent": 4, "text": ["The type of noise added to the interior points."], "extent": [2574, 2627]}], "container": true, "attrs": {"id": "noisetype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [5544, 5555], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "freq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [5731, 5739], "body": [{"type": "para", "indent": 4, "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of ", {"type": "q", "text": ["panning"]}, " across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."], "extent": [5760, 6096]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6096, 6112], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Crease Weights"], "extent": [3544, 3560], "body": [{"type": "para", "indent": 4, "text": ["Creases control the strength of pull of the polygon faces on the subdivision surfaces, much like a magnet drawing the surface towards the reference polygon. \n    When this is turned on, a ", {"type": "code", "text": ["creaseweights"]}, " attribute will be created and the specified value will be applied to the vertices at the interface between the outside and inside faces. \n    See the ", {"scheme": "Node", "value": "/nodes/sop/subdivide", "type": "link", "text": ["Subdivide SOP"], "fullpath": "/nodes/sop/subdivide.html"}, " for more details."], "extent": [3590, 4002]}], "container": true, "attrs": {"id": "detail_creaseweights"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight"], "extent": [4002, 4010], "body": [{"type": "para", "indent": 4, "text": ["Specify the ", {"type": "code", "text": ["creaseweights"]}, " value. "], "extent": [4033, 4078]}], "container": true, "attrs": {"id": "detail_weight"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Proxy Geometry"], "extent": [27061, 27077], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Default"], "extent": [27077, 27090], "body": [{"type": "para", "indent": 8, "text": ["Uses the default voronoi fractured geometry."], "extent": [27090, 27143]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Convex Decomposition"], "extent": [27143, 27169], "body": [{"type": "para", "indent": 8, "text": ["Performs a convex decomposition from the fractured input geometry."], "extent": [27169, 27244]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Packed Spheres"], "extent": [27244, 27264], "body": [{"type": "para", "indent": 8, "text": ["Uses packed sphere primitives from the fractured input geometry."], "extent": [27264, 27338]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Concavity"], "extent": [1599, 1614], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance from a point on the geometry to it\u2019s closest convex hull edge.\n    Reducing this value will produce convex hulls that are a closer fit to the input geometry, but the geometry may be split into more segments."], "extent": [1636, 1870]}], "container": true, "attrs": {"id": "maxconcavity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Voxel Size"], "extent": [1176, 1189], "body": [{"type": "para", "indent": 4, "text": ["The size of voxels in the output VDB volume.\n    Surface features smaller than this will not be in the output VDB."], "extent": [1209, 1333]}], "container": true, "attrs": {"id": "voxelsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Radius in Voxels"], "extent": [826, 848], "body": [{"type": "para", "indent": 4, "text": ["Determines the smallest sphere size in voxel units."], "extent": [867, 924]}], "container": true, "attrs": {"id": "radiusmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Radius in Voxels"], "extent": [924, 946], "body": [{"type": "para", "indent": 4, "text": ["Determines the largest sphere size in voxel units."], "extent": [965, 1021]}], "container": true, "attrs": {"id": "radiusmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Spheres"], "extent": [1021, 1034], "body": [{"type": "para", "indent": 4, "text": ["No more than this number of spheres are generated per VDB primitive."], "extent": [1054, 1132]}], "container": true, "attrs": {"id": "spheresmax"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [27582, 27602], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Search Radius"], "extent": [4078, 4093], "body": [{"type": "para", "indent": 4, "text": ["When re-wiring incoming constraints, specify the search radius within which to look for matching connections. "], "extent": [4127, 4243]}], "container": true, "attrs": {"id": "constraints_searchradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Tags"], "extent": [4243, 4253], "body": [{"type": "para", "indent": 4, "text": ["Creates a ", {"type": "code", "text": ["constraint_tag"]}, " string attribute on the constraint primitives instead of using groups. This allows for more flexibility and matches the Vellum constraints."], "extent": [4282, 4454]}], "container": true, "attrs": {"id": "constraints_usetags"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Constraint Properties"], "extent": [4454, 4483], "body": [{"type": "para", "indent": 4, "text": ["Applies constraint properties to the output constraint geometry.\n    The ", {"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": ["RBD Constraint Properties SOP"], "fullpath": "/nodes/sop/rbdconstraintproperties.html"}, " can be used for advanced constraint setups."], "extent": [4520, 4707]}], "container": true, "attrs": {"id": "constraints_applyproperties"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Glue Constraint Name"], "extent": [4707, 4729], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"type": "ui", "text": ["Data Name"]}, " of the constraint data (for example, the ", {"scheme": "Node", "value": "/nodes/dop/glueconrel", "type": "link", "text": ["Glue Constraint Relationship"], "fullpath": "/nodes/dop/glueconrel.html"}, ") to use in the DOP network.    "], "extent": [2883, 3040]}], "container": true, "attrs": {"id": "constraints_gluename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Color"], "extent": [4825, 4839], "body": [{"type": "para", "indent": 4, "text": ["Adds a color to the various constraints being created for quick identification."], "extent": [4872, 4957]}], "container": true, "attrs": {"id": "constraints_enablecolor"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "_fracture_common#constraints_color", "type": "include", "indent": 0, "role": "item", "extent": [27861, 27907]}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Primary Strength"], "extent": [27907, 27925], "body": [{"type": "para", "indent": 4, "text": ["The strength of the glue bonds of primary fracture."], "extent": [27925, 27982]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Chipping Strength"], "extent": [5045, 5064], "body": [{"type": "para", "indent": 4, "text": ["The strength of glue bonds for corner chips."], "extent": [5102, 5151]}], "container": true, "attrs": {"id": "constraints_chippingstrength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Strength Variance"], "extent": [4652, 4671], "body": [{"type": "para", "indent": 4, "text": ["Randomly varies the strength of each glue bond."], "extent": [4702, 4755]}], "container": true, "attrs": {"id": "glue_strengthvariance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Switch to Soft Constraint when Broken"], "extent": [28107, 28146], "body": [{"type": "para", "indent": 4, "text": ["Specifies a different constraint type to switch to if the glue constraint is broken by the ", {"scheme": "Node", "value": "/nodes/dop/bulletrbdsolver", "type": "link", "text": ["Bullet Solver"], "fullpath": "/nodes/dop/bulletrbdsolver.html"}, "."], "extent": [3368, 3506]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3506, 3516], "body": [{"type": "para", "indent": 8, "text": ["This parameter does not set attributes directly but determines which parameters are relevant to streamline the UI."], "extent": [3516, 3640]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft Constraint Name"], "extent": [28215, 28237], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"type": "ui", "text": ["Data Name"]}, " of the constraint data (for example, the ", {"scheme": "Node", "value": "/nodes/dop/bulletsoftconrel", "type": "link", "text": ["Bullet Soft Constraint Relationship"], "fullpath": "/nodes/dop/bulletsoftconrel.html"}, ") to use in the DOP network once the initial constraints are broken."], "extent": [4039, 4245]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Degrees of Freedom"], "extent": [28307, 28327], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether the constraint affects position, orientation, or both.\n    This does not apply to glue constraints, which work by simulating glued chunks together as a single object with a compound collision shape."], "extent": [3083, 3305]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness"], "extent": [1561, 1572], "body": [{"type": "para", "indent": 4, "text": ["Specifies the strength of the force that attempts to match the transforms of the two anchors."], "extent": [1591, 1690]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to the frequency of a spring."], "extent": [1690, 1750]}], "container": true, "attrs": {"id": "stiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping Ratio"], "extent": [1750, 1765], "body": [{"type": "para", "indent": 4, "text": ["Specifies how much damping is applied to the motion.\n    A value of 0 specifies no damping, and a value of 1 provides just enough damping to prevent oscillation.\n    Values between 0 and 1 allow oscillation (with some damping), and values greater than 1 provide increasingly damped motion that has no oscillation."], "extent": [1787, 2106]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to the damping ratio of a spring."], "extent": [2106, 2170]}], "container": true, "attrs": {"id": "dampingratio"}, "role": "item"}], "container": true, "role": "item_group"}]}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [28497, 28506], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/booleanfracture", "type": "link", "text": "", "fullpath": "/nodes/sop/booleanfracture.html"}], "extent": [28506, 28539]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdinteriordetail", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdinteriordetail.html"}], "extent": [28539, 28574]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/voronoifracture", "type": "link", "text": "", "fullpath": "/nodes/sop/voronoifracture.html"}], "extent": [28574, 28607]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdconstraintsfromlines", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdconstraintsfromlines.html"}], "extent": [28607, 28648]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdconstraintsfromcurves", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdconstraintsfromcurves.html"}], "extent": [28648, 28690]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdconstraintsfromrules", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdconstraintsfromrules.html"}], "extent": [28690, 28731]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdconstraintproperties.html"}], "extent": [28731, 28772]}], "container": true}], "text": "Related"}], "title": ["RBD Material Fracture"], "summary": ["Fractures the input geometry based on a material type."], "included": ["/nodes/dop/bulletsoftconrel", "/nodes/dop/glueconrel", "/nodes/dop/standard_bulletconstraint_parm", "/nodes/dop/standard_data_idparms", "/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_data_parms", "/nodes/dop/standard_dataactive_parms", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_datashare_parms", "/nodes/dop/standard_locals", "/nodes/sop/_fracture_common", "/nodes/sop/boolean", "/nodes/sop/convexdecomposition", "/nodes/sop/mountain", "/nodes/sop/rbdcluster", "/nodes/sop/rbdconstraintproperties", "/nodes/sop/rbdinteriordetail", "/nodes/sop/vdbfrompolygons", "/nodes/sop/vdbtospheres", "/nodes/sop/volume_types", "/nodes/vop/unifiednoise", "/nodes/vop/unifiednoise_static", "/shelf/mountain"]}