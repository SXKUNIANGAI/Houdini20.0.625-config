{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "volumenoisefog", "icon": "SOP/volumenoisefog", "since": "19", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Volume Noise Fog"], "extent": [90, 111]}, {"type": "summary", "indent": 0, "text": ["Adds or generates noise in volume/VDB primitives."], "extent": [111, 169]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [169, 184], "body": [{"type": "para", "indent": 0, "text": ["The Volume Noise Fog SOP provides a simple interface for quickly adding coherent noise to voxel values, reducing the need to create VOP networks or write VEX code. All of the models provided by the ", {"scheme": "Node", "value": "/nodes/vop/unifiednoise", "type": "link", "text": ["Unified Noise VOP"], "fullpath": "/nodes/vop/unifiednoise.html"}, " and ", {"scheme": "Node", "value": "/nodes/vop/cloudnoise", "type": "link", "text": ["Cloud Noise VOP"], "fullpath": "/nodes/vop/cloudnoise.html"}, " can be used with this node."], "extent": [184, 496]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [496, 508], "body": [{"level": 2, "type": "sep", "indent": 0, "text": [" General "], "extent": [508, 523], "body": [], "container": true, "attrs": {"id": "linkgeneral"}}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mask"], "extent": [551, 557], "body": [{"type": "para", "indent": 4, "text": ["When this checkbox enabled, use the blend between the original input volume (given by ", {"type": "ui", "text": ["Fot Volume Name"]}, ") and to modified volume by this node."], "extent": [577, 730]}], "container": true, "attrs": {"id": "maskweight"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Invert Mask"], "extent": [730, 743], "body": [{"type": "para", "indent": 4, "text": ["Reverses the the mask that blend between the original input volume (given by ", {"type": "ui", "text": ["Fot Volume Name"]}, ") and to modified volume by this node."], "extent": [763, 907]}], "container": true, "attrs": {"id": "invertmask"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mask Volume Name"], "extent": [907, 925], "body": [{"type": "para", "indent": 4, "text": ["The name of the fog volume to mask this node\u2019s effect."], "extent": [949, 1013]}], "container": true, "attrs": {"id": "maskvolumename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fog Volume Name"], "extent": [1013, 1030], "body": [{"type": "para", "indent": 4, "text": ["The name of the volume primitive to modify with noise."], "extent": [1043, 1109]}], "container": true, "attrs": {"id": "vol"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "type": "sep", "indent": 0, "text": [" Noise Value "], "extent": [1109, 1127], "body": [], "container": true, "attrs": {"id": "linknoisevalue"}}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Operation"], "extent": [1152, 1163], "body": [{"type": "para", "indent": 4, "text": ["Specifies how to combine the generated adjustment value with the incoming volume. If the target primitive does not exist on the input geometry, all operations will have the same effect."], "extent": [1182, 1381]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Set"], "extent": [1381, 1390], "body": [{"type": "para", "indent": 8, "text": ["Use this operation if you want to overwrite any existing value with the generated adjustment value."], "extent": [1390, 1499]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add"], "extent": [1499, 1508], "body": [{"type": "para", "indent": 8, "text": ["The generated adjustment value will be added to the existing volume primitive."], "extent": [1508, 1596]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Subtract"], "extent": [1596, 1610], "body": [{"type": "para", "indent": 8, "text": ["The generated adjustment value will be subtracted from the existing volume primitive."], "extent": [1610, 1705]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Multiply"], "extent": [1705, 1719], "body": [{"type": "para", "indent": 8, "text": ["The existing volume primitive value will be multiplied by the generated adjustment value."], "extent": [1719, 1818]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum"], "extent": [1818, 1831], "body": [{"type": "para", "indent": 8, "text": ["Output will be minimum of the existing volume primitive value and the adjustment value."], "extent": [1831, 1936]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum"], "extent": [1936, 1949], "body": [{"type": "para", "indent": 8, "text": ["Output will be maximum of the existing volume primitive value and the adjustment value."], "extent": [1949, 2046]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "operation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Range Values"], "extent": [2046, 2060], "body": [{"type": "para", "indent": 4, "text": ["The adjustment value will be generated in the selected range. This parameter governs how this range is specified."], "extent": [2081, 2200]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Positive"], "extent": [2200, 2214], "body": [{"type": "para", "indent": 8, "text": ["From 0 to the ", {"type": "ui", "text": ["Amplitude"]}, " value."], "extent": [2214, 2258]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Negative"], "extent": [2258, 2272], "body": [{"type": "para", "indent": 8, "text": ["From negative ", {"type": "ui", "text": ["Amplitude"]}, " to 0 value."], "extent": [2272, 2321]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Zero Centered"], "extent": [2321, 2340], "body": [{"type": "para", "indent": 8, "text": ["From negative ", {"type": "ui", "text": ["Amplitude"]}, " to positive ", {"type": "ui", "text": ["Amplitude"]}, "."], "extent": [2340, 2404]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Min/Max"], "extent": [2404, 2425], "body": [{"type": "para", "indent": 8, "text": ["The range contains all values between ", {"type": "ui", "text": ["Min Value"]}, " and ", {"type": "ui", "text": ["Max Value"]}, "."], "extent": [2425, 2505]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Min Value "], "role": "th", "extent": [2505, 2526], "container": true}, {"type": "cell", "indent": 12, "text": ["Max Value "], "role": "th", "extent": [2526, 2552], "container": true}, {"type": "cell", "indent": 16, "text": ["Custom Range "], "role": "th", "extent": [2552, 2585]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["0 "], "role": "td", "extent": [2585, 2609], "container": true}, {"type": "cell", "indent": 12, "text": ["1 "], "role": "td", "extent": [2609, 2625], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["0 to 1"], "extent": [2625, 2648]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["5 "], "role": "td", "extent": [2648, 2672], "container": true}, {"type": "cell", "indent": 12, "text": ["10 "], "role": "td", "extent": [2672, 2689], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["5 to 10"], "extent": [2689, 2713]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["-5 "], "role": "td", "extent": [2713, 2738], "container": true}, {"type": "cell", "indent": 12, "text": ["7 "], "role": "td", "extent": [2738, 2754], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["-5 to 7"], "extent": [2754, 2779]}]}], "divider": false}]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Min + Range Length"], "extent": [2779, 2803], "body": [{"type": "para", "indent": 8, "text": ["The range contains all values between ", {"type": "ui", "text": ["Min Value"]}, " and ", {"type": "ui", "text": ["Min Value + Range Length"]}, ". For instance, if ", {"type": "ui", "text": ["Min Value"]}, " is ", {"type": "code", "text": ["2"]}, " and ", {"type": "ui", "text": ["Range Length"]}, " is ", {"type": "code", "text": ["5"]}, ", the minimum and maximum limits of the range will be ", {"type": "code", "text": ["2"]}, " and ", {"type": "code", "text": ["7"]}, ", respectively."], "extent": [2803, 3044]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Min Value "], "role": "th", "extent": [3044, 3065], "container": true}, {"type": "cell", "indent": 12, "text": ["Range Length "], "role": "th", "extent": [3065, 3094], "container": true}, {"type": "cell", "indent": 16, "text": ["Custom Range "], "role": "th", "extent": [3094, 3127]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["0 "], "role": "td", "extent": [3127, 3151], "container": true}, {"type": "cell", "indent": 12, "text": ["1 "], "role": "td", "extent": [3151, 3167], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["0 to 1"], "extent": [3167, 3190]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["5 "], "role": "td", "extent": [3190, 3214], "container": true}, {"type": "cell", "indent": 12, "text": ["10 "], "role": "td", "extent": [3214, 3231], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["5 to 15"], "extent": [3231, 3255]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["-5 "], "role": "td", "extent": [3255, 3280], "container": true}, {"type": "cell", "indent": 12, "text": ["7 "], "role": "td", "extent": [3280, 3296], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["-5 to 2"], "extent": [3296, 3321]}]}], "divider": false}]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Middle \u00b1 Range Length"], "extent": [3321, 3348], "body": [{"type": "para", "indent": 8, "text": ["The range contains all values between ", {"type": "ui", "text": ["Middle Value - Range Length / 2"]}, " and ", {"type": "ui", "text": ["Middle Value + Range Length / 2"]}, ". For instance, if ", {"type": "ui", "text": ["Middle Value"]}, " is ", {"type": "code", "text": ["8"]}, " and ", {"type": "ui", "text": ["Range Length"]}, " is ", {"type": "code", "text": ["4"]}, ", the minimum and maximum limits of the range will be ", {"type": "code", "text": ["6"]}, " and ", {"type": "code", "text": ["10"]}, ", respectively."], "extent": [3348, 3630]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Middle Value "], "role": "th", "extent": [3630, 3654], "container": true}, {"type": "cell", "indent": 12, "text": ["Range Length "], "role": "th", "extent": [3654, 3683], "container": true}, {"type": "cell", "indent": 16, "text": ["Custom Range "], "role": "th", "extent": [3683, 3716]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["0 "], "role": "td", "extent": [3716, 3740], "container": true}, {"type": "cell", "indent": 12, "text": ["1 "], "role": "td", "extent": [3740, 3756], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["-0.5 to 0.5"], "extent": [3756, 3784]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["5 "], "role": "td", "extent": [3784, 3808], "container": true}, {"type": "cell", "indent": 12, "text": ["10 "], "role": "td", "extent": [3808, 3825], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["0 to 10"], "extent": [3825, 3849]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["-5 "], "role": "td", "extent": [3849, 3874], "container": true}, {"type": "cell", "indent": 12, "text": ["7 "], "role": "td", "extent": [3874, 3890], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["-8.5 to 1.5"], "extent": [3890, 3919]}]}], "divider": false}]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "rangemethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amplitude"], "extent": [3919, 3930], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Positive"]}, ", the generated noise is from 0 to this value. When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Negative"]}, ", the generated noise is from the negative of this value to 0. When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Zero Centered"]}, ", the generated noise is from the negative of this value to the positive this value."], "extent": [3949, 4265]}], "container": true, "attrs": {"id": "amplitude"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Value"], "extent": [4265, 4276], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min/Max"]}, " or ", {"type": "ui", "text": ["Min + Range Length"]}, ", this is the minimum value of the generated noise."], "extent": [4294, 4413]}], "container": true, "attrs": {"id": "rangemin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Value"], "extent": [4413, 4424], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min/Max"]}, ", this is the maximum value of the generated noise."], "extent": [4442, 4535]}], "container": true, "attrs": {"id": "rangemax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Middle Value"], "extent": [4535, 4549], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Middle \u00b1 Range Length"]}, ", this is the middle value of the custom range."], "extent": [4567, 4670]}], "container": true, "attrs": {"id": "midvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Range Length"], "extent": [4670, 4684], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min + Range Length"]}, " or ", {"type": "ui", "text": ["Middle \u00b1 Range Length"]}, ", this is the length of the custom range."], "extent": [4704, 4827]}], "container": true, "attrs": {"id": "rangevalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Raw Value"], "extent": [4827, 4845], "body": [{"type": "para", "indent": 4, "text": ["When this is on, the distribution of values is non-uniform, being more likely to fall near the center of the range than the edges. When this is off, values have a more uniform distribution across the range."], "extent": [4864, 5076]}], "container": true, "attrs": {"id": "outputraw"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Remap Ramp"], "extent": [5076, 5095], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to shape the output of the noise with a ramp."], "extent": [5120, 5184]}], "container": true, "attrs": {"id": "enableremapramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remap Ramp"], "extent": [5184, 5196], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable Remap Ramp"]}, " is on, this ramp lets you control the output of the noise function. The horizontal axis represents the range (minimum on the left, maximum on the right). The vertical axis represents the number to output when the noise function generates that point within the range."], "extent": [5215, 5514]}, {"type": "para", "indent": 4, "text": ["The default ramp (diagonal from bottom-left to top-right) outputs each number \u201cas itself\u201d."], "extent": [5514, 5610]}], "container": true, "attrs": {"id": "remapramp"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Value Correction "], "extent": [5610, 5635], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [6823, 6830], "body": [{"type": "para", "indent": 4, "text": ["This value controls how much the medium grey (noise values around ", {"type": "code", "text": ["0.5"]}, ") is pulled towards zero (if ", {"type": "ui", "text": ["Bias"]}, " is less than ", {"type": "code", "text": ["1"]}, ")\n    or pulled towards one (if ", {"type": "ui", "text": ["Bias"]}, " is greater than ", {"type": "code", "text": ["1"]}, "). A value of ", {"type": "code", "text": ["0.5"]}, " leaves the noise values unaffected."], "extent": [6844, 7094]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_bias.png", "type": "img", "text": ""}], "extent": [7094, 7145]}], "container": true, "attrs": {"id": "bias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gain"], "extent": [7145, 7151], "body": [{"type": "para", "indent": 4, "text": ["Controls how much the medium greys (noise values around ", {"type": "code", "text": ["0.5"]}, ") are pulled together, while values around ", {"type": "code", "text": ["0"]}, " and ", {"type": "code", "text": ["1"]}, " are pulled apart. The value of ", {"type": "code", "text": ["0.5"]}, " leaves the noise values unaffected."], "extent": [7165, 7363]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_gain.png", "type": "img", "text": ""}], "extent": [7363, 7414]}], "container": true, "attrs": {"id": "gain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gamma"], "extent": [7414, 7421], "body": [{"type": "para", "indent": 4, "text": ["Controls the overall gamma of the generated noise. Values less than ", {"type": "code", "text": ["1"]}, " will darken the noise, increasing the range of values in originally bright areas.\n    Conversely, values greater than ", {"type": "code", "text": ["1"]}, " will stretch out the range of values for originally dark areas, which will increase the overall brightness of the noise."], "extent": [7436, 7756]}], "container": true, "attrs": {"id": "gamma"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contrast"], "extent": [7756, 7766], "body": [{"type": "para", "indent": 4, "text": ["This value expands or shrinks the overall range of tonal values. Particularly, each noise value is pushed towards (if ", {"type": "ui", "text": ["Contrast"]}, " is less than ", {"type": "code", "text": ["1"]}, ") or away from (if ", {"type": "ui", "text": ["Contrast"]}, " is greater than ", {"type": "code", "text": ["1"]}, ") medium grey (noise values at ", {"type": "code", "text": ["0.5"]}, ")."], "extent": [7784, 8027]}], "container": true, "attrs": {"id": "contrast"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Minimum"], "extent": [5821, 5834], "body": [{"type": "para", "indent": 8, "text": ["If this checkbox is turned on, the generated noise values are clamped to the specified ", {"type": "ui", "text": ["Minimum"]}, "."], "extent": [5866, 5975]}], "container": true, "attrs": {"id": "noiseclampminvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Maximum"], "extent": [5975, 5988], "body": [{"type": "para", "indent": 8, "text": ["If this checkbox is turned on, the generated noise values are clamped to the specified ", {"type": "ui", "text": ["Maximum"]}, "."], "extent": [6020, 6133]}], "container": true, "attrs": {"id": "noiseclampmaxvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale Value"], "extent": [6133, 6150], "body": [{"type": "para", "indent": 8, "text": ["Scales the adjustment value. A value of ", {"type": "code", "text": ["1"]}, " will output the adjusted value, ignoring the initial value, while ", {"type": "code", "text": ["0"]}, " means that no adjustment takes place. Scaling can be done either by uniform value ", {"type": "ui", "text": ["Constant"]}, " or by value of the ", {"type": "ui", "text": ["Blend Volume"]}, " (when the menu on the right of this parameter is set to ", {"type": "ui", "text": ["Use Volume"]}, ")."], "extent": [6175, 6510]}], "container": true, "attrs": {"id": "blendweight"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale Volume Name"], "extent": [6510, 6533], "body": [{"type": "para", "indent": 8, "text": ["Specifies the volume primitive to use as the scale volume for the adjusted value."], "extent": [6555, 6654]}], "container": true, "attrs": {"id": "blendvol"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fold"], "extent": [6654, 6664], "body": [], "container": true, "attrs": {"id": "cc_fold"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Complement"], "extent": [6743, 6759], "body": [{"type": "para", "indent": 4, "text": ["Computes the complement of the noise by subtracting the generated noise from ", {"type": "code", "text": ["1"]}, "."], "extent": [8055, 8141]}], "container": true, "attrs": {"id": "cc_inv"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Noise Pattern "], "extent": [6831, 6851], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [10992, 11005], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."], "extent": [3119, 3223]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [3223, 3233], "body": [{"type": "para", "indent": 8, "text": ["The default. A faster and more interesting variant of Perlin noise."], "extent": [3233, 3314]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_simplex.jpg", "type": "img", "text": ""}], "extent": [3314, 3368]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sparse Convolution"], "extent": [3368, 3392], "body": [{"type": "para", "indent": 8, "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."], "extent": [3392, 3498]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sparse.jpg", "type": "img", "text": ""}], "extent": [3498, 3551]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alligator"], "extent": [3551, 3566], "body": [{"type": "para", "indent": 8, "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."], "extent": [3566, 3657]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_alligator.jpg", "type": "img", "text": ""}], "extent": [3657, 3717]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin"], "extent": [3717, 3729], "body": [{"type": "para", "indent": 8, "text": ["A noise where the visual details are the same size. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Perlin_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [3729, 3830]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_perlin.jpg", "type": "img", "text": ""}, "\n        ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_periodic_perlin.jpg", "type": "img", "text": ""}], "extent": [3830, 3944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Flow"], "extent": [3944, 3961], "body": [{"type": "para", "indent": 8, "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"type": "ui", "text": ["Flow rotation"]}, " parameter below to control the rotation."], "extent": [3961, 4177]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4177, 4201], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_flow.mp4"}}, {"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4248, 4264], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_periodic_flow.mp4"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex"], "extent": [4324, 4337], "body": [{"type": "para", "indent": 8, "text": ["A noise similar to Perlin but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [4337, 4504]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F1"], "extent": [4504, 4528], "body": [{"type": "para", "indent": 8, "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Worley_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [4528, 4685]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f1.jpg", "type": "img", "text": ""}], "extent": [4685, 4745]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F2-F1"], "extent": [4745, 4772], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley noise that produces blunted and cornered features."], "extent": [4772, 4856]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f2.jpg", "type": "img", "text": ""}], "extent": [4856, 4916]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F1"], "extent": [4916, 4943], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [4943, 5071]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F2-F1"], "extent": [5071, 5101], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5101, 5232]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F1"], "extent": [5232, 5259], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5259, 5387]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F2-F1"], "extent": [5387, 5417], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5417, 5544]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Cloud"], "extent": [11068, 11086], "body": [{"type": "para", "indent": 8, "text": ["Generates perlin noise based cloud pattern influenced by the ", {"type": "ui", "text": ["Distortion"]}, " parameter."], "extent": [11086, 11190]}, {"type": "para", "indent": 8, "text": ["Perlin noise with ", {"type": "ui", "text": ["Distortion"]}, " set to -1 (left) and +1 (right):"], "extent": [11190, 11264]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 8, "role": "item", "extent": [11264, 11289], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_perlin_posd.png", "image2": "/images/nodes/vop/cloudnoise_perlin_negd.png"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex Cloud"], "extent": [11422, 11441], "body": [{"type": "para", "indent": 8, "text": ["Generates simplex noise based cloud pattern influenced by the ", {"type": "ui", "text": ["Distortion"]}, " parameter. Simplex noise similar to Perlin, but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [11441, 11703]}, {"type": "para", "indent": 8, "text": ["Simplex noise with ", {"type": "ui", "text": ["Distortion"]}, " set to -1 (left) and +1 (right):"], "extent": [11703, 11778]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 8, "role": "item", "extent": [11778, 11803], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_simplex_posd.png", "image2": "/images/nodes/vop/cloudnoise_simplex_negd.png"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fast Simplex Cloud"], "extent": [11938, 11962], "body": [{"type": "para", "indent": 8, "text": ["Generates fast simplex noise based cloud pattern influenced by the ", {"type": "ui", "text": ["Distortion"]}, " parameter. This simplex noise function uses a different lattice structure and a cheaper accumulation method."], "extent": [11962, 12170]}, {"type": "para", "indent": 8, "text": ["Simplex noise with ", {"type": "ui", "text": ["Distortion"]}, " set to -1 (left) and +1 (right):"], "extent": [12170, 12245]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 8, "role": "item", "extent": [12245, 12270], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_fast_simplex_posd.png", "image2": "/images/nodes/vop/cloudnoise_fast_simplex_negd.png"}}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "attrs": {"id": "basis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size"], "extent": [12876, 12890], "body": [{"type": "para", "indent": 4, "text": ["Uniform scale of elements in the noise."], "extent": [12912, 12957]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate scales along each axis."], "extent": [12957, 13071]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [13071, 13083], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "elementsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Scale"], "extent": [13132, 13147], "body": [{"type": "para", "indent": 4, "text": ["When you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Element Size"]}, " separately across each axis."], "extent": [13174, 13333]}], "container": true, "attrs": {"id": "elementscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [13333, 13341], "body": [{"type": "para", "indent": 4, "text": ["Offset within the evaluated noise field (added to each axis). If you have the general noise effect you want, but want to get a different set of values for a different look, try changing the offset."], "extent": [13358, 13561]}, {"type": "para", "indent": 4, "text": ["You can animate the noise using an expression such as ", {"type": "code", "text": ["$T * 0.25"]}, " here. This is faster to compute than ", {"type": "ui", "text": ["Animate Noise"]}, ", but gives the visual effect of ", {"type": "q", "text": ["panning"]}, " across the noise field, which may or may not be acceptable."], "extent": [13561, 13789]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate additional offsets along each axis."], "extent": [13789, 13919]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [13919, 13931], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [13979, 13987], "body": [{"type": "para", "indent": 4, "text": ["When you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you add the a separate offset along each axis."], "extent": [14009, 14155]}], "container": true, "attrs": {"id": "offsetv"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shift Offset from Center"], "extent": [7061, 7091], "body": [{"type": "para", "indent": 8, "text": ["Shifts the ", {"type": "ui", "text": ["Offset"]}, " to avoid the ugly noise pattern at the center of the noise function."], "extent": [7116, 7216]}], "container": true, "attrs": {"id": "shiftoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use VEXpression"], "extent": [14155, 14172], "body": [{"type": "para", "indent": 4, "text": ["Turn this checkbox on to use a VEXpression to override parameters based on arbitrary attribute values."], "extent": [14201, 14309]}], "container": true, "attrs": {"id": "usenoiseexpression"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Animation "], "extent": [15051, 15069], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Animate Noise"], "extent": [15098, 15117], "body": [{"type": "para", "indent": 8, "text": ["Vary the generated noise with time. Some noise types do not support this feature."], "extent": [15140, 15235]}, {"type": "para", "indent": 8, "text": ["Applying animation this way on geometries with millions of element count is slower to compute than using expressions such as ", {"type": "code", "text": ["$T * 0.25"]}, " in the ", {"type": "ui", "text": ["Offset"]}, " parameter to ", {"type": "q", "text": ["pan"]}, " across the noise field. "], "extent": [15235, 15451]}], "container": true, "attrs": {"id": "animated"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pulse Duration"], "extent": [15451, 15471], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Animated Noise"]}, " is on, this controls the rate of change of the noise pattern."], "extent": [15499, 15595]}], "container": true, "attrs": {"id": "pulseduration"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkanimation"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Fractal "], "extent": [15595, 15611], "body": [{"type": "para", "indent": 4, "text": ["The fractal controls let you add additional fractal noise on top of the output of the basic noise type."], "extent": [15641, 15754]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fractal Type"], "extent": [6741, 6755], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [6777, 6787], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [6787, 6865]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_none.jpg", "type": "img", "text": ""}], "extent": [6865, 6928]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [6928, 6942], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [6942, 7012]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_standard.jpg", "type": "img", "text": ""}], "extent": [7012, 7079]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [7079, 7092], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["Standard"]}, " but dampens the noise in the valleys, which can be useful for generating mountainous terrain."], "extent": [7092, 7230]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_terrain.jpg", "type": "img", "text": ""}], "extent": [7230, 7296]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid"], "extent": [7296, 7308], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys."], "extent": [7308, 7371]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fractal"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 4, "text": ["The following parameters are available when Fractal type is anything except ", {"type": "ui", "text": ["None"]}, ".        "], "extent": [15805, 15912]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Max octaves"], "extent": [7448, 7461], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more ", {"type": "q", "text": ["detailed"]}, " the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."], "extent": [7479, 7855]}], "container": true, "attrs": {"id": "oct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [7855, 7867], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."], "extent": [7885, 8021]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8021, 8037], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lacunarity.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "lac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [8086, 8097], "body": [{"type": "para", "indent": 4, "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the ", {"type": "q", "text": ["jaggies"]}, " added to the output. You can use a negative value for roughness."], "extent": [8117, 8320]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8320, 8336], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_roughness.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "rough"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkfractal"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Warping "], "extent": [16052, 16068], "body": [{"type": "para", "indent": 4, "text": [{"type": "ui", "text": ["Lattice Warp"]}, " and ", {"type": "ui", "text": ["Gradient Warp"]}, " are two methods for adding ", {"type": "q", "text": ["fractal-ness"]}, " to the basic noises by warping the noise space."], "extent": [16090, 16228]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Lattice Warp"], "extent": [16228, 16246], "body": [{"type": "para", "indent": 8, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [16269, 16334]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [16334, 16350], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lattice_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "disp"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Lattice Warp Size"], "extent": [16409, 16432], "body": [{"type": "para", "indent": 8, "text": ["Controls base feature size of the generated noise. The value applies to each axis."], "extent": [16460, 16560]}], "container": true, "attrs": {"id": "dispesize"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gradient Warp"], "extent": [16560, 16579], "body": [{"type": "para", "indent": 8, "text": ["Widens the peaks or valleys of the noise output."], "extent": [16603, 16665]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [16665, 16681], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_gradient_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "gflow"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accumulate Lattice Warp"], "extent": [16741, 16770], "body": [{"type": "para", "indent": 8, "text": ["Accumulates the warp for each iteration (octave) of added fractal noise. This can add interesting smudgy effects when used in images, and interesting landmarks when used for terrain."], "extent": [16795, 16991]}], "container": true, "attrs": {"id": "accuml"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accumulate Gradient Warp"], "extent": [16991, 17021], "body": [{"type": "para", "indent": 8, "text": ["Accumulates the warp for each iteration (octave) of added fractal noise."], "extent": [17046, 17132]}], "container": true, "attrs": {"id": "accumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [9395, 9410], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Noise type"]}, " is ", {"type": "q", "text": ["Flow"]}, ", this controls the rotation of the ", {"type": "q", "text": ["swirl"]}, ", from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Because this parameter is fractional, you can\u2019t just use ", {"type": "code", "text": ["$F"]}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"type": "code", "text": ["$FF / 100"]}, "."], "extent": [9432, 9729]}], "container": true, "attrs": {"id": "flowrot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distortion"], "extent": [4529, 4542], "body": [{"type": "para", "indent": 4, "text": ["Controls how much the noise is distorted in the direction of decreasing noise values if ", {"type": "ui", "text": ["Distortion"]}, " is greater than ", {"type": "code", "text": ["1"]}, ", and in the direction of increasing noise values if ", {"type": "ui", "text": ["Distortion"]}, " is less than ", {"type": "code", "text": ["1"]}, ". When worley details are added to the noise pattern, the effect of distortion are largely diminished."], "extent": [4559, 4874]}, {"type": "para", "indent": 4, "text": ["Distortion with a value of ", {"type": "code", "text": ["1"]}, ":"], "extent": [4874, 4911]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_perlin_posd.png", "type": "img", "text": ""}], "extent": [4911, 4970]}, {"type": "para", "indent": 4, "text": ["Distortion with a value of ", {"type": "code", "text": ["-1"]}, ":"], "extent": [4970, 5008]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_perlin_negd.png", "type": "img", "text": ""}], "extent": [5008, 5066]}], "container": true, "attrs": {"id": "distort"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch"], "extent": [5066, 5075], "body": [{"type": "para", "indent": 4, "text": ["How much to stretch the noise in each direction. The advantage of using this instead of ", {"type": "ui", "text": ["Element Size"]}, " is that it preserves some details unstretched, making the stretched noise pattern more natural looking."], "extent": [5092, 5307]}, {"type": "para", "indent": 4, "text": ["Comparing Element Scale of ", {"type": "code", "text": ["3"]}, " (left) to Stretch value of ", {"type": "code", "text": ["3"]}, " (right) along the X-axis:"], "extent": [5307, 5399]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 4, "role": "item", "extent": [5399, 5420], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_perlin_stretch.png", "image2": "/images/nodes/vop/cloudnoise_perlin_elementscale.png"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "stretch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Droop"], "extent": [5556, 5563], "body": [{"type": "para", "indent": 4, "text": ["Warps the generated noise such that the noise pattern is bending or hanging towards the given droop direction."], "extent": [5578, 5694]}, {"type": "para", "indent": 4, "text": ["Noise pattern without (left) and with droop applied (right):"], "extent": [5694, 5759]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 4, "role": "item", "extent": [5759, 5780], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_perlin_droop7.png", "image2": "/images/nodes/vop/cloudnoise_perlin_nodroop.png"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "droop"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Droop Direction"], "extent": [5910, 5927], "body": [{"type": "para", "indent": 4, "text": ["The direction in which the noise is warped."], "extent": [5945, 5994]}], "container": true, "attrs": {"id": "droopdir"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkwarping"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Worley Details "], "extent": [17374, 17397], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Add Worley Details"], "extent": [3460, 3480], "body": [{"type": "para", "indent": 4, "text": ["When turned on, a worley noise is combined with the noise pattern (specified by ", {"type": "ui", "text": ["Noise Type"]}, ") to give puffy cloud noise.\n    Enabling this, will largely diminish the distortion effect (specified by ", {"type": "ui", "text": ["Distortion"]}, ")."], "extent": [3510, 3732]}, {"type": "para", "indent": 4, "text": ["Noise pattern with added worley noise:"], "extent": [3732, 3776]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_worley.png", "type": "img", "text": ""}], "extent": [3776, 3829]}], "container": true, "attrs": {"id": "doworleydetails"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend"], "extent": [3829, 3836], "body": [{"type": "para", "indent": 4, "text": ["Controls the amount of mixing between the noise pattern (specified by ", {"type": "ui", "text": ["Noise Type"]}, ") and the worley noise. A value of ", {"type": "code", "text": ["0"]}, " means no worley noise is applied to the noise pattern."], "extent": [3857, 4040]}], "container": true, "attrs": {"id": "worleyblend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Erosion"], "extent": [4040, 4049], "body": [{"type": "para", "indent": 4, "text": ["Controls how fast the edges of the noise pattern turn to zero. The larger the value, the more the edges are eroded creating smaller and smaller cloud patches."], "extent": [4072, 4236]}], "container": true, "attrs": {"id": "worleyerosion"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size Scale"], "extent": [4236, 4256], "body": [{"type": "para", "indent": 4, "text": ["Multiplier on the ", {"type": "ui", "text": ["Element Size"]}, " parameter that effects the worley noise pattern."], "extent": [4288, 4377]}], "container": true, "attrs": {"id": "worleyelementsizescale"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkworleydetails"}}], "container": true, "attrs": {"id": "linknoise"}}, {"level": 2, "type": "sep", "indent": 0, "text": [" Post-Process "], "extent": [7434, 7453]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Minimum"], "extent": [7453, 7462], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, the final output values are clamped to the specified ", {"type": "ui", "text": ["Minimum"]}, "."], "extent": [7485, 7587]}], "container": true, "attrs": {"id": "clampminvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum"], "extent": [7587, 7596], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, the final output values are clamped to the specified ", {"type": "ui", "text": ["Maximum"]}, "."], "extent": [7619, 7721]}], "container": true, "attrs": {"id": "clampmaxvalue"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [7721, 7730], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/volumeadjustfog", "type": "link", "text": ["Volume Noise Fog"], "fullpath": "/nodes/sop/volumeadjustfog.html"}], "extent": [7730, 7777]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/volumenoisesdf", "type": "link", "text": ["Volume Noise SDF"], "fullpath": "/nodes/sop/volumenoisesdf.html"}], "extent": [7777, 7822]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/volumenoisevector", "type": "link", "text": ["Volume Noise Vector"], "fullpath": "/nodes/sop/volumenoisevector.html"}], "extent": [7822, 7873]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribnoise", "type": "link", "text": ["Attribute Noise"], "fullpath": "/nodes/sop/attribnoise.html"}], "extent": [7873, 7914]}], "container": true}], "text": "Related"}], "title": ["Volume Noise Fog"], "summary": ["Adds or generates noise in volume/VDB primitives."], "included": ["/nodes/sop/attribnoise", "/nodes/vop/cloudnoise", "/nodes/vop/unifiednoise"]}